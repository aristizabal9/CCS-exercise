{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "CcsExerciseCoreStack": {
        "id": "CcsExerciseCoreStack",
        "path": "CcsExerciseCoreStack",
        "children": {
          "CrudCoreFunction": {
            "id": "CrudCoreFunction",
            "path": "CcsExerciseCoreStack/CrudCoreFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseCoreStack/CrudCoreFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseCoreStack/CrudCoreFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/CrudCoreFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CrudCoreFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "CrudCoreFunctionServiceRole5F4CBE83",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "CrudCoreUserPool": {
            "id": "CrudCoreUserPool",
            "path": "CcsExerciseCoreStack/CrudCoreUserPool",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CrudCoreUserPool/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPool",
                  "aws:cdk:cloudformation:props": {
                    "accountRecoverySetting": {
                      "recoveryMechanisms": [
                        {
                          "name": "verified_phone_number",
                          "priority": 1
                        },
                        {
                          "name": "verified_email",
                          "priority": 2
                        }
                      ]
                    },
                    "adminCreateUserConfig": {
                      "allowAdminCreateUserOnly": false
                    },
                    "emailVerificationMessage": "The verification code to your new account is {####}",
                    "emailVerificationSubject": "Verify your new account",
                    "mfaConfiguration": "OFF",
                    "schema": [
                      {
                        "name": "email",
                        "mutable": true,
                        "required": true
                      },
                      {
                        "name": "name",
                        "mutable": true,
                        "required": true
                      }
                    ],
                    "smsVerificationMessage": "The verification code to your new account is {####}",
                    "userPoolTags": {
                      "env": "DEV",
                      "project": "ccs-001"
                    },
                    "usernameConfiguration": {
                      "caseSensitive": false
                    },
                    "userPoolName": "CrudCoreUserPool",
                    "verificationMessageTemplate": {
                      "defaultEmailOption": "CONFIRM_WITH_CODE",
                      "emailMessage": "The verification code to your new account is {####}",
                      "emailSubject": "Verify your new account",
                      "smsMessage": "The verification code to your new account is {####}"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.CfnUserPool",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cognito.UserPool",
              "version": "2.133.0"
            }
          },
          "CrudCoreClient": {
            "id": "CrudCoreClient",
            "path": "CcsExerciseCoreStack/CrudCoreClient",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CrudCoreClient/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPoolClient",
                  "aws:cdk:cloudformation:props": {
                    "allowedOAuthFlows": [
                      "implicit",
                      "code"
                    ],
                    "allowedOAuthFlowsUserPoolClient": true,
                    "allowedOAuthScopes": [
                      "profile",
                      "phone",
                      "email",
                      "openid",
                      "aws.cognito.signin.user.admin"
                    ],
                    "callbackUrLs": [
                      "https://example.com"
                    ],
                    "explicitAuthFlows": [
                      "ALLOW_USER_PASSWORD_AUTH",
                      "ALLOW_REFRESH_TOKEN_AUTH"
                    ],
                    "refreshTokenValidity": 60,
                    "supportedIdentityProviders": [
                      "COGNITO"
                    ],
                    "tokenValidityUnits": {
                      "refreshToken": "minutes"
                    },
                    "userPoolId": {
                      "Ref": "CrudCoreUserPoolFD818991"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.CfnUserPoolClient",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cognito.UserPoolClient",
              "version": "2.133.0"
            }
          },
          "CrudCoreAuthorizer": {
            "id": "CrudCoreAuthorizer",
            "path": "CcsExerciseCoreStack/CrudCoreAuthorizer",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CrudCoreAuthorizer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "identitySource": "method.request.header.Authorization",
                    "name": "CcsExerciseCoreStackCrudCoreAuthorizer321EBACE",
                    "providerArns": [
                      {
                        "Fn::GetAtt": [
                          "CrudCoreUserPoolFD818991",
                          "Arn"
                        ]
                      }
                    ],
                    "restApiId": {
                      "Ref": "CoreApiB0451A24"
                    },
                    "type": "COGNITO_USER_POOLS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.CognitoUserPoolsAuthorizer",
              "version": "2.133.0"
            }
          },
          "CoreApi": {
            "id": "CoreApi",
            "path": "CcsExerciseCoreStack/CoreApi",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CoreApi/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "CoreApi",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.133.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "CcsExerciseCoreStack/CoreApi/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "CcsExerciseCoreStack/CoreApi/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/CoreApi/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "CcsExerciseCoreStack/CoreApi/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "CoreApiCloudWatchRole3D3E3A2F",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.133.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "CcsExerciseCoreStack/CoreApi/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/CoreApi/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "description": "Automatically created by the RestApi construct",
                        "restApiId": {
                          "Ref": "CoreApiB0451A24"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.133.0"
                }
              },
              "DeploymentStage.prod": {
                "id": "DeploymentStage.prod",
                "path": "CcsExerciseCoreStack/CoreApi/DeploymentStage.prod",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/CoreApi/DeploymentStage.prod/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "deploymentId": {
                          "Ref": "CoreApiDeployment4F36329Ba102ce871a5896350037f122d3007b80"
                        },
                        "restApiId": {
                          "Ref": "CoreApiB0451A24"
                        },
                        "stageName": "prod",
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.133.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "CcsExerciseCoreStack/CoreApi/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.133.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "CcsExerciseCoreStack/CoreApi/Default",
                "children": {
                  "customers": {
                    "id": "customers",
                    "path": "CcsExerciseCoreStack/CoreApi/Default/customers",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseCoreStack/CoreApi/Default/customers/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "CoreApiB0451A24",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "customers",
                            "restApiId": {
                              "Ref": "CoreApiB0451A24"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.133.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "CcsExerciseCoreStack/CoreApi/Default/customers/GET",
                        "children": {
                          "ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.GET..customers": {
                            "id": "ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.GET..customers",
                            "path": "CcsExerciseCoreStack/CoreApi/Default/customers/GET/ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.GET..customers",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudCoreFunctionE832C5FC",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "CoreApiB0451A24"
                                      },
                                      "/",
                                      {
                                        "Ref": "CoreApiDeploymentStageprod008E845B"
                                      },
                                      "/GET/customers"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.GET..customers": {
                            "id": "ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.GET..customers",
                            "path": "CcsExerciseCoreStack/CoreApi/Default/customers/GET/ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.GET..customers",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudCoreFunctionE832C5FC",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "CoreApiB0451A24"
                                      },
                                      "/test-invoke-stage/GET/customers"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseCoreStack/CoreApi/Default/customers/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "CrudCoreAuthorizerB0694699"
                                },
                                "httpMethod": "GET",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "CrudCoreFunctionE832C5FC",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "CoreApicustomers4F0FD650"
                                },
                                "restApiId": {
                                  "Ref": "CoreApiB0451A24"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      },
                      "POST": {
                        "id": "POST",
                        "path": "CcsExerciseCoreStack/CoreApi/Default/customers/POST",
                        "children": {
                          "ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.POST..customers": {
                            "id": "ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.POST..customers",
                            "path": "CcsExerciseCoreStack/CoreApi/Default/customers/POST/ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.POST..customers",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudCoreFunctionE832C5FC",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "CoreApiB0451A24"
                                      },
                                      "/",
                                      {
                                        "Ref": "CoreApiDeploymentStageprod008E845B"
                                      },
                                      "/POST/customers"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.POST..customers": {
                            "id": "ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.POST..customers",
                            "path": "CcsExerciseCoreStack/CoreApi/Default/customers/POST/ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.POST..customers",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudCoreFunctionE832C5FC",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "CoreApiB0451A24"
                                      },
                                      "/test-invoke-stage/POST/customers"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseCoreStack/CoreApi/Default/customers/POST/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "CrudCoreAuthorizerB0694699"
                                },
                                "httpMethod": "POST",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "CrudCoreFunctionE832C5FC",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "CoreApicustomers4F0FD650"
                                },
                                "restApiId": {
                                  "Ref": "CoreApiB0451A24"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      },
                      "{id}": {
                        "id": "{id}",
                        "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "CoreApicustomers4F0FD650"
                                },
                                "pathPart": "{id}",
                                "restApiId": {
                                  "Ref": "CoreApiB0451A24"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.133.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/GET",
                            "children": {
                              "ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.GET..customers.{id}": {
                                "id": "ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.GET..customers.{id}",
                                "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/GET/ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.GET..customers.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudCoreFunctionE832C5FC",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "CoreApiB0451A24"
                                          },
                                          "/",
                                          {
                                            "Ref": "CoreApiDeploymentStageprod008E845B"
                                          },
                                          "/GET/customers/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.GET..customers.{id}": {
                                "id": "ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.GET..customers.{id}",
                                "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/GET/ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.GET..customers.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudCoreFunctionE832C5FC",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "CoreApiB0451A24"
                                          },
                                          "/test-invoke-stage/GET/customers/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "authorizationType": "COGNITO_USER_POOLS",
                                    "authorizerId": {
                                      "Ref": "CrudCoreAuthorizerB0694699"
                                    },
                                    "httpMethod": "GET",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "CrudCoreFunctionE832C5FC",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    },
                                    "resourceId": {
                                      "Ref": "CoreApicustomersid73F92449"
                                    },
                                    "restApiId": {
                                      "Ref": "CoreApiB0451A24"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.133.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.133.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/DELETE",
                            "children": {
                              "ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.DELETE..customers.{id}": {
                                "id": "ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.DELETE..customers.{id}",
                                "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/DELETE/ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.DELETE..customers.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudCoreFunctionE832C5FC",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "CoreApiB0451A24"
                                          },
                                          "/",
                                          {
                                            "Ref": "CoreApiDeploymentStageprod008E845B"
                                          },
                                          "/DELETE/customers/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.DELETE..customers.{id}": {
                                "id": "ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.DELETE..customers.{id}",
                                "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/DELETE/ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.DELETE..customers.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudCoreFunctionE832C5FC",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "CoreApiB0451A24"
                                          },
                                          "/test-invoke-stage/DELETE/customers/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "authorizationType": "COGNITO_USER_POOLS",
                                    "authorizerId": {
                                      "Ref": "CrudCoreAuthorizerB0694699"
                                    },
                                    "httpMethod": "DELETE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "CrudCoreFunctionE832C5FC",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    },
                                    "resourceId": {
                                      "Ref": "CoreApicustomersid73F92449"
                                    },
                                    "restApiId": {
                                      "Ref": "CoreApiB0451A24"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.133.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.133.0"
            }
          },
          "CoreSecret": {
            "id": "CoreSecret",
            "path": "CcsExerciseCoreStack/CoreSecret",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CoreSecret/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "description": {
                      "Fn::Join": [
                        "",
                        [
                          "Generated by the CDK for stack: ",
                          {
                            "Ref": "AWS::StackName"
                          }
                        ]
                      ]
                    },
                    "generateSecretString": {
                      "passwordLength": 30,
                      "secretStringTemplate": "{\"username\":\"clusteradmin\"}",
                      "generateStringKey": "password",
                      "excludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
                    },
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecret",
                  "version": "2.133.0"
                }
              },
              "Attachment": {
                "id": "Attachment",
                "path": "CcsExerciseCoreStack/CoreSecret/Attachment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/CoreSecret/Attachment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SecretsManager::SecretTargetAttachment",
                      "aws:cdk:cloudformation:props": {
                        "secretId": {
                          "Ref": "CoreSecretD41E526A"
                        },
                        "targetId": {
                          "Ref": "CoreDbCluster0D70995F"
                        },
                        "targetType": "AWS::RDS::DBCluster"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_secretsmanager.CfnSecretTargetAttachment",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_secretsmanager.SecretTargetAttachment",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_rds.DatabaseSecret",
              "version": "2.133.0"
            }
          },
          "CoreDbCluster": {
            "id": "CoreDbCluster",
            "path": "CcsExerciseCoreStack/CoreDbCluster",
            "children": {
              "AuroraMySqlDatabaseClusterEngineDefaultParameterGroup": {
                "id": "AuroraMySqlDatabaseClusterEngineDefaultParameterGroup",
                "path": "CcsExerciseCoreStack/CoreDbCluster/AuroraMySqlDatabaseClusterEngineDefaultParameterGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CoreDbCluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::RDS::DBCluster",
                  "aws:cdk:cloudformation:props": {
                    "copyTagsToSnapshot": true,
                    "databaseName": "coredb",
                    "dbClusterIdentifier": "core-db-cl",
                    "dbClusterParameterGroupName": "default.aurora-mysql5.7",
                    "engine": "aurora-mysql",
                    "engineMode": "serverless",
                    "masterUsername": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "CoreSecretD41E526A"
                          },
                          ":SecretString:username::}}"
                        ]
                      ]
                    },
                    "masterUserPassword": {
                      "Fn::Join": [
                        "",
                        [
                          "{{resolve:secretsmanager:",
                          {
                            "Ref": "CoreSecretD41E526A"
                          },
                          ":SecretString:password::}}"
                        ]
                      ]
                    },
                    "scalingConfiguration": {
                      "autoPause": true,
                      "minCapacity": 1,
                      "maxCapacity": 2,
                      "secondsUntilAutoPause": 600
                    },
                    "storageEncrypted": true,
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "vpcSecurityGroupIds": []
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_rds.CfnDBCluster",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_rds.ServerlessCluster",
              "version": "2.133.0"
            }
          },
          "CustomerAdminRule": {
            "id": "CustomerAdminRule",
            "path": "CcsExerciseCoreStack/CustomerAdminRule",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CustomerAdminRule/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "eventPattern": {
                      "detail-type": [
                        "create-customer",
                        "update-customer",
                        "delete-customer"
                      ],
                      "source": [
                        "crm.customerAdmin"
                      ]
                    },
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "CustomerAdminFunction4EA27316",
                            "Arn"
                          ]
                        },
                        "deadLetterConfig": {
                          "arn": {
                            "Fn::GetAtt": [
                              "CustomerAdminRuleDLQE3636912",
                              "Arn"
                            ]
                          }
                        },
                        "retryPolicy": {
                          "maximumRetryAttempts": 2,
                          "maximumEventAgeInSeconds": 7200
                        }
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.133.0"
                }
              },
              "AllowEventRuleCcsExerciseCoreStackCustomerAdminFunctionBAE94895": {
                "id": "AllowEventRuleCcsExerciseCoreStackCustomerAdminFunctionBAE94895",
                "path": "CcsExerciseCoreStack/CustomerAdminRule/AllowEventRuleCcsExerciseCoreStackCustomerAdminFunctionBAE94895",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "CustomerAdminFunction4EA27316",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "CustomerAdminRule5278F362",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.133.0"
            }
          },
          "CustomerAdminRuleDLQ": {
            "id": "CustomerAdminRuleDLQ",
            "path": "CcsExerciseCoreStack/CustomerAdminRuleDLQ",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CustomerAdminRuleDLQ/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.CfnQueue",
                  "version": "2.133.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CcsExerciseCoreStack/CustomerAdminRuleDLQ/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/CustomerAdminRuleDLQ/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SQS::QueuePolicy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "sqs:SendMessage",
                              "Condition": {
                                "ArnEquals": {
                                  "aws:SourceArn": {
                                    "Fn::GetAtt": [
                                      "CustomerAdminRule5278F362",
                                      "Arn"
                                    ]
                                  }
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "events.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::GetAtt": [
                                  "CustomerAdminRuleDLQE3636912",
                                  "Arn"
                                ]
                              },
                              "Sid": "AllowEventRuleCcsExerciseCoreStackCustomerAdminRuleD2BB79B3"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "queues": [
                          {
                            "Ref": "CustomerAdminRuleDLQE3636912"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sqs.CfnQueuePolicy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.QueuePolicy",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.Queue",
              "version": "2.133.0"
            }
          },
          "CustomerAdminFunction": {
            "id": "CustomerAdminFunction",
            "path": "CcsExerciseCoreStack/CustomerAdminFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseCoreStack/CustomerAdminFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseCoreStack/CustomerAdminFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/CustomerAdminFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CustomerAdminFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "CustomerAdminFunctionServiceRoleAF7B535F",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "EventNotificationRule": {
            "id": "EventNotificationRule",
            "path": "CcsExerciseCoreStack/EventNotificationRule",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/EventNotificationRule/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "eventPattern": {
                      "detail-type": [
                        "unscheduled-stop",
                        "customer-accident",
                        "speed-limit-exceeded",
                        "emergency"
                      ],
                      "source": [
                        "collector.alerts"
                      ]
                    },
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "EventNotificationFunctionD9D8E104",
                            "Arn"
                          ]
                        },
                        "deadLetterConfig": {
                          "arn": {
                            "Fn::GetAtt": [
                              "EventNotificationRuleDLQ18CE9698",
                              "Arn"
                            ]
                          }
                        },
                        "retryPolicy": {
                          "maximumRetryAttempts": 2,
                          "maximumEventAgeInSeconds": 7200
                        }
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.133.0"
                }
              },
              "AllowEventRuleCcsExerciseCoreStackEventNotificationFunction82F5E212": {
                "id": "AllowEventRuleCcsExerciseCoreStackEventNotificationFunction82F5E212",
                "path": "CcsExerciseCoreStack/EventNotificationRule/AllowEventRuleCcsExerciseCoreStackEventNotificationFunction82F5E212",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "EventNotificationFunctionD9D8E104",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "EventNotificationRule1BC291BB",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.133.0"
            }
          },
          "EventNotificationRuleDLQ": {
            "id": "EventNotificationRuleDLQ",
            "path": "CcsExerciseCoreStack/EventNotificationRuleDLQ",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/EventNotificationRuleDLQ/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.CfnQueue",
                  "version": "2.133.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CcsExerciseCoreStack/EventNotificationRuleDLQ/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/EventNotificationRuleDLQ/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SQS::QueuePolicy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "sqs:SendMessage",
                              "Condition": {
                                "ArnEquals": {
                                  "aws:SourceArn": {
                                    "Fn::GetAtt": [
                                      "EventNotificationRule1BC291BB",
                                      "Arn"
                                    ]
                                  }
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "events.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::GetAtt": [
                                  "EventNotificationRuleDLQ18CE9698",
                                  "Arn"
                                ]
                              },
                              "Sid": "AllowEventRuleCcsExerciseCoreStackEventNotificationRule641EE2BD"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "queues": [
                          {
                            "Ref": "EventNotificationRuleDLQ18CE9698"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sqs.CfnQueuePolicy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.QueuePolicy",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.Queue",
              "version": "2.133.0"
            }
          },
          "EventNotificationFunction": {
            "id": "EventNotificationFunction",
            "path": "CcsExerciseCoreStack/EventNotificationFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseCoreStack/EventNotificationFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseCoreStack/EventNotificationFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/EventNotificationFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/EventNotificationFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "EventNotificationFunctionServiceRoleDED56C33",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "corewebapplication-bucket": {
            "id": "corewebapplication-bucket",
            "path": "CcsExerciseCoreStack/corewebapplication-bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/corewebapplication-bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "corsConfiguration": {
                      "corsRules": [
                        {
                          "allowedHeaders": [
                            "*"
                          ],
                          "allowedMethods": [
                            "GET",
                            "POST",
                            "DELETE"
                          ],
                          "allowedOrigins": [
                            "*"
                          ],
                          "exposedHeaders": [
                            "Access-Control-Allow-Origin"
                          ]
                        }
                      ]
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      },
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.133.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CcsExerciseCoreStack/corewebapplication-bucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCoreStack/corewebapplication-bucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "corewebapplicationbucketE10EFDEF"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "corewebapplicationbucketE10EFDEF",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "corewebapplicationbucketE10EFDEF",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:PutBucketPolicy",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "corewebapplicationbucketE10EFDEF",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "corewebapplicationbucketE10EFDEF",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "CoreWebApplicationoai1A04BB63",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "corewebapplicationbucketE10EFDEF",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "corewebapplicationbucketE10EFDEF",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "CoreWebApplicationoai1A04BB63",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "corewebapplicationbucketE10EFDEF",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.133.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "CcsExerciseCoreStack/corewebapplication-bucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "CcsExerciseCoreStack/corewebapplication-bucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.133.0"
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "CcsExerciseCoreStack/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "CcsExerciseCoreStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.133.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "CcsExerciseCoreStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "CcsExerciseCoreStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.133.0"
            }
          },
          "CoreWebApplication-oai": {
            "id": "CoreWebApplication-oai",
            "path": "CcsExerciseCoreStack/CoreWebApplication-oai",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CoreWebApplication-oai/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                  "aws:cdk:cloudformation:props": {
                    "cloudFrontOriginAccessIdentityConfig": {
                      "comment": "Allows CloudFront to reach the bucket"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.OriginAccessIdentity",
              "version": "2.133.0"
            }
          },
          "CoreWebApplication": {
            "id": "CoreWebApplication",
            "path": "CcsExerciseCoreStack/CoreWebApplication",
            "children": {
              "Origin1": {
                "id": "Origin1",
                "path": "CcsExerciseCoreStack/CoreWebApplication/Origin1",
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.3.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCoreStack/CoreWebApplication/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "origins": [
                        {
                          "domainName": {
                            "Fn::GetAtt": [
                              "corewebapplicationbucketE10EFDEF",
                              "RegionalDomainName"
                            ]
                          },
                          "id": "CcsExerciseCoreStackCoreWebApplicationOrigin1BFE732CE",
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "CoreWebApplicationoai1A04BB63"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "pathPattern": "*",
                        "targetOriginId": "CcsExerciseCoreStackCoreWebApplicationOrigin1BFE732CE",
                        "allowedMethods": [
                          "GET",
                          "HEAD",
                          "OPTIONS",
                          "PUT",
                          "PATCH",
                          "POST",
                          "DELETE"
                        ],
                        "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                        "compress": true,
                        "originRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
                        "responseHeadersPolicyId": "67f7725c-6f97-4210-82d7-5512b31e9d03",
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "defaultRootObject": "index.html",
                      "httpVersion": "http2",
                      "ipv6Enabled": true
                    },
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
              "version": "2.133.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "CcsExerciseCoreStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "CcsExerciseCoreStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "CcsExerciseCoreStack/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnCondition",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "CcsExerciseCoreStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.133.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "CcsExerciseCoreStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.133.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.133.0"
        }
      },
      "CcsExerciseAdminStack": {
        "id": "CcsExerciseAdminStack",
        "path": "CcsExerciseAdminStack",
        "children": {
          "CrudTrucksAdminFunction": {
            "id": "CrudTrucksAdminFunction",
            "path": "CcsExerciseAdminStack/CrudTrucksAdminFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseAdminStack/CrudTrucksAdminFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseAdminStack/CrudTrucksAdminFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/CrudTrucksAdminFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "CcsExerciseAdminStack/CrudTrucksAdminFunction/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseAdminStack/CrudTrucksAdminFunction/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "TrucksAdminTable259F787D",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "CrudTrucksAdminFunctionServiceRoleDefaultPolicyA0A944D3",
                            "roles": [
                              {
                                "Ref": "CrudTrucksAdminFunctionServiceRoleA653866B"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/CrudTrucksAdminFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "CrudTrucksAdminFunctionServiceRoleA653866B",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "TrucksAdminTable": {
            "id": "TrucksAdminTable",
            "path": "CcsExerciseAdminStack/TrucksAdminTable",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksAdminTable/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "attributeDefinitions": [
                      {
                        "attributeName": "id",
                        "attributeType": "N"
                      }
                    ],
                    "billingMode": "PAY_PER_REQUEST",
                    "keySchema": [
                      {
                        "attributeName": "id",
                        "keyType": "HASH"
                      }
                    ],
                    "tableName": "TrucksAdminTable",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_dynamodb.CfnTable",
                  "version": "2.133.0"
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "CcsExerciseAdminStack/TrucksAdminTable/ScalingRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_dynamodb.Table",
              "version": "2.133.0"
            }
          },
          "TrucksAdminUserPool": {
            "id": "TrucksAdminUserPool",
            "path": "CcsExerciseAdminStack/TrucksAdminUserPool",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksAdminUserPool/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPool",
                  "aws:cdk:cloudformation:props": {
                    "accountRecoverySetting": {
                      "recoveryMechanisms": [
                        {
                          "name": "verified_phone_number",
                          "priority": 1
                        },
                        {
                          "name": "verified_email",
                          "priority": 2
                        }
                      ]
                    },
                    "adminCreateUserConfig": {
                      "allowAdminCreateUserOnly": false
                    },
                    "emailVerificationMessage": "The verification code to your new account is {####}",
                    "emailVerificationSubject": "Verify your new account",
                    "mfaConfiguration": "OFF",
                    "schema": [
                      {
                        "name": "email",
                        "mutable": true,
                        "required": true
                      },
                      {
                        "name": "name",
                        "mutable": true,
                        "required": true
                      }
                    ],
                    "smsVerificationMessage": "The verification code to your new account is {####}",
                    "userPoolTags": {
                      "env": "DEV",
                      "project": "ccs-001"
                    },
                    "usernameConfiguration": {
                      "caseSensitive": false
                    },
                    "userPoolName": "TrucksAdminUserPool",
                    "verificationMessageTemplate": {
                      "defaultEmailOption": "CONFIRM_WITH_CODE",
                      "emailMessage": "The verification code to your new account is {####}",
                      "emailSubject": "Verify your new account",
                      "smsMessage": "The verification code to your new account is {####}"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.CfnUserPool",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cognito.UserPool",
              "version": "2.133.0"
            }
          },
          "TrucksAdminClient": {
            "id": "TrucksAdminClient",
            "path": "CcsExerciseAdminStack/TrucksAdminClient",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksAdminClient/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPoolClient",
                  "aws:cdk:cloudformation:props": {
                    "allowedOAuthFlows": [
                      "implicit",
                      "code"
                    ],
                    "allowedOAuthFlowsUserPoolClient": true,
                    "allowedOAuthScopes": [
                      "profile",
                      "phone",
                      "email",
                      "openid",
                      "aws.cognito.signin.user.admin"
                    ],
                    "callbackUrLs": [
                      "https://example.com"
                    ],
                    "explicitAuthFlows": [
                      "ALLOW_USER_PASSWORD_AUTH",
                      "ALLOW_REFRESH_TOKEN_AUTH"
                    ],
                    "refreshTokenValidity": 60,
                    "supportedIdentityProviders": [
                      "COGNITO"
                    ],
                    "tokenValidityUnits": {
                      "refreshToken": "minutes"
                    },
                    "userPoolId": {
                      "Ref": "TrucksAdminUserPool854FB8D7"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.CfnUserPoolClient",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cognito.UserPoolClient",
              "version": "2.133.0"
            }
          },
          "TrucksAdminAuthorizer": {
            "id": "TrucksAdminAuthorizer",
            "path": "CcsExerciseAdminStack/TrucksAdminAuthorizer",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksAdminAuthorizer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "identitySource": "method.request.header.Authorization",
                    "name": "CcsExerciseAdminStackTrucksAdminAuthorizerEE43BD23",
                    "providerArns": [
                      {
                        "Fn::GetAtt": [
                          "TrucksAdminUserPool854FB8D7",
                          "Arn"
                        ]
                      }
                    ],
                    "restApiId": {
                      "Ref": "TrucksAdminApiDA497A60"
                    },
                    "type": "COGNITO_USER_POOLS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.CognitoUserPoolsAuthorizer",
              "version": "2.133.0"
            }
          },
          "TrucksAdminApi": {
            "id": "TrucksAdminApi",
            "path": "CcsExerciseAdminStack/TrucksAdminApi",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksAdminApi/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "TrucksAdminApi",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.133.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "CcsExerciseAdminStack/TrucksAdminApi/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "CcsExerciseAdminStack/TrucksAdminApi/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/TrucksAdminApi/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "CcsExerciseAdminStack/TrucksAdminApi/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "TrucksAdminApiCloudWatchRoleCC6B974D",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.133.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "CcsExerciseAdminStack/TrucksAdminApi/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/TrucksAdminApi/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "description": "Automatically created by the RestApi construct",
                        "restApiId": {
                          "Ref": "TrucksAdminApiDA497A60"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.133.0"
                }
              },
              "DeploymentStage.prod": {
                "id": "DeploymentStage.prod",
                "path": "CcsExerciseAdminStack/TrucksAdminApi/DeploymentStage.prod",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/TrucksAdminApi/DeploymentStage.prod/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "deploymentId": {
                          "Ref": "TrucksAdminApiDeploymentC9A53E6942405b1bad278581466fb3edc5c4e5f2"
                        },
                        "restApiId": {
                          "Ref": "TrucksAdminApiDA497A60"
                        },
                        "stageName": "prod",
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.133.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "CcsExerciseAdminStack/TrucksAdminApi/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.133.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "CcsExerciseAdminStack/TrucksAdminApi/Default",
                "children": {
                  "trucks": {
                    "id": "trucks",
                    "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "TrucksAdminApiDA497A60",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "trucks",
                            "restApiId": {
                              "Ref": "TrucksAdminApiDA497A60"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.133.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/GET",
                        "children": {
                          "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks": {
                            "id": "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudTrucksAdminFunctionAFC52BF3",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/",
                                      {
                                        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
                                      },
                                      "/GET/trucks"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks": {
                            "id": "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudTrucksAdminFunctionAFC52BF3",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/test-invoke-stage/GET/trucks"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "TrucksAdminAuthorizer3AD5D526"
                                },
                                "httpMethod": "GET",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "CrudTrucksAdminFunctionAFC52BF3",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "TrucksAdminApitrucksE6689FCD"
                                },
                                "restApiId": {
                                  "Ref": "TrucksAdminApiDA497A60"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      },
                      "POST": {
                        "id": "POST",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/POST",
                        "children": {
                          "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..trucks": {
                            "id": "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..trucks",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/POST/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..trucks",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudTrucksAdminFunctionAFC52BF3",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/",
                                      {
                                        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
                                      },
                                      "/POST/trucks"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..trucks": {
                            "id": "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..trucks",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/POST/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..trucks",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudTrucksAdminFunctionAFC52BF3",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/test-invoke-stage/POST/trucks"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/POST/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "TrucksAdminAuthorizer3AD5D526"
                                },
                                "httpMethod": "POST",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "CrudTrucksAdminFunctionAFC52BF3",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "TrucksAdminApitrucksE6689FCD"
                                },
                                "restApiId": {
                                  "Ref": "TrucksAdminApiDA497A60"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      },
                      "{id}": {
                        "id": "{id}",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "TrucksAdminApitrucksE6689FCD"
                                },
                                "pathPart": "{id}",
                                "restApiId": {
                                  "Ref": "TrucksAdminApiDA497A60"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.133.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/GET",
                            "children": {
                              "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks.{id}": {
                                "id": "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks.{id}",
                                "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudTrucksAdminFunctionAFC52BF3",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "TrucksAdminApiDA497A60"
                                          },
                                          "/",
                                          {
                                            "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
                                          },
                                          "/GET/trucks/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks.{id}": {
                                "id": "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks.{id}",
                                "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudTrucksAdminFunctionAFC52BF3",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "TrucksAdminApiDA497A60"
                                          },
                                          "/test-invoke-stage/GET/trucks/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "authorizationType": "COGNITO_USER_POOLS",
                                    "authorizerId": {
                                      "Ref": "TrucksAdminAuthorizer3AD5D526"
                                    },
                                    "httpMethod": "GET",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "CrudTrucksAdminFunctionAFC52BF3",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    },
                                    "resourceId": {
                                      "Ref": "TrucksAdminApitrucksid14B1CFD3"
                                    },
                                    "restApiId": {
                                      "Ref": "TrucksAdminApiDA497A60"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.133.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.133.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/DELETE",
                            "children": {
                              "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.DELETE..trucks.{id}": {
                                "id": "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.DELETE..trucks.{id}",
                                "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/DELETE/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.DELETE..trucks.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudTrucksAdminFunctionAFC52BF3",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "TrucksAdminApiDA497A60"
                                          },
                                          "/",
                                          {
                                            "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
                                          },
                                          "/DELETE/trucks/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.DELETE..trucks.{id}": {
                                "id": "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.DELETE..trucks.{id}",
                                "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/DELETE/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.DELETE..trucks.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudTrucksAdminFunctionAFC52BF3",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "TrucksAdminApiDA497A60"
                                          },
                                          "/test-invoke-stage/DELETE/trucks/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "authorizationType": "COGNITO_USER_POOLS",
                                    "authorizerId": {
                                      "Ref": "TrucksAdminAuthorizer3AD5D526"
                                    },
                                    "httpMethod": "DELETE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "CrudTrucksAdminFunctionAFC52BF3",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    },
                                    "resourceId": {
                                      "Ref": "TrucksAdminApitrucksid14B1CFD3"
                                    },
                                    "restApiId": {
                                      "Ref": "TrucksAdminApiDA497A60"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.133.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "dashboards": {
                    "id": "dashboards",
                    "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "TrucksAdminApiDA497A60",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "dashboards",
                            "restApiId": {
                              "Ref": "TrucksAdminApiDA497A60"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.133.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards/GET",
                        "children": {
                          "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..dashboards": {
                            "id": "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..dashboards",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..dashboards",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TrucksDashboardsFunction960D52B0",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/",
                                      {
                                        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
                                      },
                                      "/GET/dashboards"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..dashboards": {
                            "id": "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..dashboards",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..dashboards",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TrucksDashboardsFunction960D52B0",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/test-invoke-stage/GET/dashboards"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "TrucksAdminAuthorizer3AD5D526"
                                },
                                "httpMethod": "GET",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TrucksDashboardsFunction960D52B0",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "TrucksAdminApidashboards9C723744"
                                },
                                "restApiId": {
                                  "Ref": "TrucksAdminApiDA497A60"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "bills": {
                    "id": "bills",
                    "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "TrucksAdminApiDA497A60",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "bills",
                            "restApiId": {
                              "Ref": "TrucksAdminApiDA497A60"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.133.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills/GET",
                        "children": {
                          "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..bills": {
                            "id": "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..bills",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..bills",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TrucksBillsFunction619A3F0F",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/",
                                      {
                                        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
                                      },
                                      "/GET/bills"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..bills": {
                            "id": "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..bills",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..bills",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TrucksBillsFunction619A3F0F",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/test-invoke-stage/GET/bills"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "TrucksAdminAuthorizer3AD5D526"
                                },
                                "httpMethod": "GET",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TrucksBillsFunction619A3F0F",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "TrucksAdminApibills74A2CBBB"
                                },
                                "restApiId": {
                                  "Ref": "TrucksAdminApiDA497A60"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "alerts": {
                    "id": "alerts",
                    "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "TrucksAdminApiDA497A60",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "alerts",
                            "restApiId": {
                              "Ref": "TrucksAdminApiDA497A60"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.133.0"
                        }
                      },
                      "POST": {
                        "id": "POST",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/POST",
                        "children": {
                          "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..alerts": {
                            "id": "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..alerts",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/POST/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..alerts",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TrucksAlertsFunction3614F7F5",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/",
                                      {
                                        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
                                      },
                                      "/POST/alerts"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..alerts": {
                            "id": "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..alerts",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/POST/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..alerts",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TrucksAlertsFunction3614F7F5",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/test-invoke-stage/POST/alerts"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/POST/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "TrucksAdminAuthorizer3AD5D526"
                                },
                                "httpMethod": "POST",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TrucksAlertsFunction3614F7F5",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "TrucksAdminApialertsEC469F48"
                                },
                                "restApiId": {
                                  "Ref": "TrucksAdminApiDA497A60"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/GET",
                        "children": {
                          "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..alerts": {
                            "id": "ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..alerts",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..alerts",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TrucksAlertsFunction3614F7F5",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/",
                                      {
                                        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
                                      },
                                      "/GET/alerts"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..alerts": {
                            "id": "ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..alerts",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..alerts",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TrucksAlertsFunction3614F7F5",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "TrucksAdminApiDA497A60"
                                      },
                                      "/test-invoke-stage/GET/alerts"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "TrucksAdminAuthorizer3AD5D526"
                                },
                                "httpMethod": "GET",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TrucksAlertsFunction3614F7F5",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "TrucksAdminApialertsEC469F48"
                                },
                                "restApiId": {
                                  "Ref": "TrucksAdminApiDA497A60"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.133.0"
            }
          },
          "TrucksDashboardsFunction": {
            "id": "TrucksDashboardsFunction",
            "path": "CcsExerciseAdminStack/TrucksDashboardsFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseAdminStack/TrucksDashboardsFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseAdminStack/TrucksDashboardsFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/TrucksDashboardsFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksDashboardsFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "TrucksDashboardsFunctionServiceRole0F1B6746",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "TrucksBillsFunction": {
            "id": "TrucksBillsFunction",
            "path": "CcsExerciseAdminStack/TrucksBillsFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseAdminStack/TrucksBillsFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseAdminStack/TrucksBillsFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/TrucksBillsFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksBillsFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "TrucksBillsFunctionServiceRoleF2953187",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "TrucksAlertsFunction": {
            "id": "TrucksAlertsFunction",
            "path": "CcsExerciseAdminStack/TrucksAlertsFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseAdminStack/TrucksAlertsFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseAdminStack/TrucksAlertsFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/TrucksAlertsFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksAlertsFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "TrucksAlertsFunctionServiceRole2FD44525",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "TruckAdminRule": {
            "id": "TruckAdminRule",
            "path": "CcsExerciseAdminStack/TruckAdminRule",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TruckAdminRule/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "eventPattern": {
                      "detail-type": [
                        "create-customer",
                        "update-customer",
                        "delete-customer"
                      ],
                      "source": [
                        "crm.customerAdmin"
                      ]
                    },
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "TruckAdminFunction7A8DCF90",
                            "Arn"
                          ]
                        },
                        "deadLetterConfig": {
                          "arn": {
                            "Fn::GetAtt": [
                              "TruckAdminRuleDLQ53F665E9",
                              "Arn"
                            ]
                          }
                        },
                        "retryPolicy": {
                          "maximumRetryAttempts": 2,
                          "maximumEventAgeInSeconds": 7200
                        }
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.133.0"
                }
              },
              "AllowEventRuleCcsExerciseAdminStackTruckAdminFunction2C94FF05": {
                "id": "AllowEventRuleCcsExerciseAdminStackTruckAdminFunction2C94FF05",
                "path": "CcsExerciseAdminStack/TruckAdminRule/AllowEventRuleCcsExerciseAdminStackTruckAdminFunction2C94FF05",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "TruckAdminFunction7A8DCF90",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "TruckAdminRuleED002F20",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.133.0"
            }
          },
          "TruckAdminRuleDLQ": {
            "id": "TruckAdminRuleDLQ",
            "path": "CcsExerciseAdminStack/TruckAdminRuleDLQ",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TruckAdminRuleDLQ/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.CfnQueue",
                  "version": "2.133.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CcsExerciseAdminStack/TruckAdminRuleDLQ/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/TruckAdminRuleDLQ/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SQS::QueuePolicy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "sqs:SendMessage",
                              "Condition": {
                                "ArnEquals": {
                                  "aws:SourceArn": {
                                    "Fn::GetAtt": [
                                      "TruckAdminRuleED002F20",
                                      "Arn"
                                    ]
                                  }
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "events.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::GetAtt": [
                                  "TruckAdminRuleDLQ53F665E9",
                                  "Arn"
                                ]
                              },
                              "Sid": "AllowEventRuleCcsExerciseAdminStackTruckAdminRule80C8DE92"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "queues": [
                          {
                            "Ref": "TruckAdminRuleDLQ53F665E9"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sqs.CfnQueuePolicy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.QueuePolicy",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.Queue",
              "version": "2.133.0"
            }
          },
          "TruckAdminFunction": {
            "id": "TruckAdminFunction",
            "path": "CcsExerciseAdminStack/TruckAdminFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseAdminStack/TruckAdminFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseAdminStack/TruckAdminFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/TruckAdminFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TruckAdminFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "TruckAdminFunctionServiceRole9E79FD18",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "trucksadminwebapplication-bucket": {
            "id": "trucksadminwebapplication-bucket",
            "path": "CcsExerciseAdminStack/trucksadminwebapplication-bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/trucksadminwebapplication-bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "corsConfiguration": {
                      "corsRules": [
                        {
                          "allowedHeaders": [
                            "*"
                          ],
                          "allowedMethods": [
                            "GET",
                            "POST",
                            "DELETE"
                          ],
                          "allowedOrigins": [
                            "*"
                          ],
                          "exposedHeaders": [
                            "Access-Control-Allow-Origin"
                          ]
                        }
                      ]
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      },
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.133.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CcsExerciseAdminStack/trucksadminwebapplication-bucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseAdminStack/trucksadminwebapplication-bucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "trucksadminwebapplicationbucket561BD5AA"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "trucksadminwebapplicationbucket561BD5AA",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "trucksadminwebapplicationbucket561BD5AA",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:PutBucketPolicy",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "trucksadminwebapplicationbucket561BD5AA",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "trucksadminwebapplicationbucket561BD5AA",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "TrucksAdminWebApplicationoai401630EA",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "trucksadminwebapplicationbucket561BD5AA",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "trucksadminwebapplicationbucket561BD5AA",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "TrucksAdminWebApplicationoai401630EA",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "trucksadminwebapplicationbucket561BD5AA",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.133.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "CcsExerciseAdminStack/trucksadminwebapplication-bucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "CcsExerciseAdminStack/trucksadminwebapplication-bucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.133.0"
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "CcsExerciseAdminStack/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "CcsExerciseAdminStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.133.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "CcsExerciseAdminStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "CcsExerciseAdminStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.133.0"
            }
          },
          "TrucksAdminWebApplication-oai": {
            "id": "TrucksAdminWebApplication-oai",
            "path": "CcsExerciseAdminStack/TrucksAdminWebApplication-oai",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksAdminWebApplication-oai/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                  "aws:cdk:cloudformation:props": {
                    "cloudFrontOriginAccessIdentityConfig": {
                      "comment": "Allows CloudFront to reach the bucket"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.OriginAccessIdentity",
              "version": "2.133.0"
            }
          },
          "TrucksAdminWebApplication": {
            "id": "TrucksAdminWebApplication",
            "path": "CcsExerciseAdminStack/TrucksAdminWebApplication",
            "children": {
              "Origin1": {
                "id": "Origin1",
                "path": "CcsExerciseAdminStack/TrucksAdminWebApplication/Origin1",
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.3.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseAdminStack/TrucksAdminWebApplication/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "origins": [
                        {
                          "domainName": {
                            "Fn::GetAtt": [
                              "trucksadminwebapplicationbucket561BD5AA",
                              "RegionalDomainName"
                            ]
                          },
                          "id": "CcsExerciseAdminStackTrucksAdminWebApplicationOrigin17B711868",
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "TrucksAdminWebApplicationoai401630EA"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "pathPattern": "*",
                        "targetOriginId": "CcsExerciseAdminStackTrucksAdminWebApplicationOrigin17B711868",
                        "allowedMethods": [
                          "GET",
                          "HEAD",
                          "OPTIONS",
                          "PUT",
                          "PATCH",
                          "POST",
                          "DELETE"
                        ],
                        "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                        "compress": true,
                        "originRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
                        "responseHeadersPolicyId": "67f7725c-6f97-4210-82d7-5512b31e9d03",
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "defaultRootObject": "index.html",
                      "httpVersion": "http2",
                      "ipv6Enabled": true
                    },
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
              "version": "2.133.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "CcsExerciseAdminStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "CcsExerciseAdminStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "CcsExerciseAdminStack/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnCondition",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "CcsExerciseAdminStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.133.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "CcsExerciseAdminStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.133.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.133.0"
        }
      },
      "CcsExerciseOnboardingStack": {
        "id": "CcsExerciseOnboardingStack",
        "path": "CcsExerciseOnboardingStack",
        "children": {
          "CrudOnboardingFunction": {
            "id": "CrudOnboardingFunction",
            "path": "CcsExerciseOnboardingStack/CrudOnboardingFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseOnboardingStack/CrudOnboardingFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseOnboardingStack/CrudOnboardingFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseOnboardingStack/CrudOnboardingFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "CcsExerciseOnboardingStack/CrudOnboardingFunction/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseOnboardingStack/CrudOnboardingFunction/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "OnboardingTable9FE21C19",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "CrudOnboardingFunctionServiceRoleDefaultPolicyB3562B3B",
                            "roles": [
                              {
                                "Ref": "CrudOnboardingFunctionServiceRole319A592F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/CrudOnboardingFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "CrudOnboardingFunctionServiceRole319A592F",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "OnboardingTable": {
            "id": "OnboardingTable",
            "path": "CcsExerciseOnboardingStack/OnboardingTable",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/OnboardingTable/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "attributeDefinitions": [
                      {
                        "attributeName": "id",
                        "attributeType": "N"
                      }
                    ],
                    "billingMode": "PAY_PER_REQUEST",
                    "keySchema": [
                      {
                        "attributeName": "id",
                        "keyType": "HASH"
                      }
                    ],
                    "tableName": "OnboardingTable",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_dynamodb.CfnTable",
                  "version": "2.133.0"
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "CcsExerciseOnboardingStack/OnboardingTable/ScalingRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_dynamodb.Table",
              "version": "2.133.0"
            }
          },
          "OnboardingUserPool": {
            "id": "OnboardingUserPool",
            "path": "CcsExerciseOnboardingStack/OnboardingUserPool",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/OnboardingUserPool/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPool",
                  "aws:cdk:cloudformation:props": {
                    "accountRecoverySetting": {
                      "recoveryMechanisms": [
                        {
                          "name": "verified_phone_number",
                          "priority": 1
                        },
                        {
                          "name": "verified_email",
                          "priority": 2
                        }
                      ]
                    },
                    "adminCreateUserConfig": {
                      "allowAdminCreateUserOnly": false
                    },
                    "emailVerificationMessage": "The verification code to your new account is {####}",
                    "emailVerificationSubject": "Verify your new account",
                    "mfaConfiguration": "OFF",
                    "schema": [
                      {
                        "name": "email",
                        "mutable": true,
                        "required": true
                      },
                      {
                        "name": "name",
                        "mutable": true,
                        "required": true
                      }
                    ],
                    "smsVerificationMessage": "The verification code to your new account is {####}",
                    "userPoolTags": {
                      "env": "DEV",
                      "project": "ccs-001"
                    },
                    "usernameConfiguration": {
                      "caseSensitive": false
                    },
                    "userPoolName": "OnboardingUserPool",
                    "verificationMessageTemplate": {
                      "defaultEmailOption": "CONFIRM_WITH_CODE",
                      "emailMessage": "The verification code to your new account is {####}",
                      "emailSubject": "Verify your new account",
                      "smsMessage": "The verification code to your new account is {####}"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.CfnUserPool",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cognito.UserPool",
              "version": "2.133.0"
            }
          },
          "OnboardingClient": {
            "id": "OnboardingClient",
            "path": "CcsExerciseOnboardingStack/OnboardingClient",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/OnboardingClient/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPoolClient",
                  "aws:cdk:cloudformation:props": {
                    "allowedOAuthFlows": [
                      "implicit",
                      "code"
                    ],
                    "allowedOAuthFlowsUserPoolClient": true,
                    "allowedOAuthScopes": [
                      "profile",
                      "phone",
                      "email",
                      "openid",
                      "aws.cognito.signin.user.admin"
                    ],
                    "callbackUrLs": [
                      "https://example.com"
                    ],
                    "explicitAuthFlows": [
                      "ALLOW_USER_PASSWORD_AUTH",
                      "ALLOW_REFRESH_TOKEN_AUTH"
                    ],
                    "refreshTokenValidity": 60,
                    "supportedIdentityProviders": [
                      "COGNITO"
                    ],
                    "tokenValidityUnits": {
                      "refreshToken": "minutes"
                    },
                    "userPoolId": {
                      "Ref": "OnboardingUserPool3945B2E6"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.CfnUserPoolClient",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cognito.UserPoolClient",
              "version": "2.133.0"
            }
          },
          "OnboardingAuthorizer": {
            "id": "OnboardingAuthorizer",
            "path": "CcsExerciseOnboardingStack/OnboardingAuthorizer",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/OnboardingAuthorizer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "identitySource": "method.request.header.Authorization",
                    "name": "CcsExerciseOnboardingStackOnboardingAuthorizerE8C0DFAC",
                    "providerArns": [
                      {
                        "Fn::GetAtt": [
                          "OnboardingUserPool3945B2E6",
                          "Arn"
                        ]
                      }
                    ],
                    "restApiId": {
                      "Ref": "OnboardingApi9093F73F"
                    },
                    "type": "COGNITO_USER_POOLS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.CognitoUserPoolsAuthorizer",
              "version": "2.133.0"
            }
          },
          "OnboardingApi": {
            "id": "OnboardingApi",
            "path": "CcsExerciseOnboardingStack/OnboardingApi",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/OnboardingApi/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "OnboardingApi",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.133.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "CcsExerciseOnboardingStack/OnboardingApi/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "CcsExerciseOnboardingStack/OnboardingApi/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseOnboardingStack/OnboardingApi/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "CcsExerciseOnboardingStack/OnboardingApi/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "OnboardingApiCloudWatchRoleE7541C5D",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.133.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "CcsExerciseOnboardingStack/OnboardingApi/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseOnboardingStack/OnboardingApi/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "description": "Automatically created by the RestApi construct",
                        "restApiId": {
                          "Ref": "OnboardingApi9093F73F"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.133.0"
                }
              },
              "DeploymentStage.prod": {
                "id": "DeploymentStage.prod",
                "path": "CcsExerciseOnboardingStack/OnboardingApi/DeploymentStage.prod",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseOnboardingStack/OnboardingApi/DeploymentStage.prod/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "deploymentId": {
                          "Ref": "OnboardingApiDeploymentA619C539395592db8e879f699dbb4a70f2823418"
                        },
                        "restApiId": {
                          "Ref": "OnboardingApi9093F73F"
                        },
                        "stageName": "prod",
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.133.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "CcsExerciseOnboardingStack/OnboardingApi/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.133.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "CcsExerciseOnboardingStack/OnboardingApi/Default",
                "children": {
                  "trucks": {
                    "id": "trucks",
                    "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "OnboardingApi9093F73F",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "trucks",
                            "restApiId": {
                              "Ref": "OnboardingApi9093F73F"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.133.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/GET",
                        "children": {
                          "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks": {
                            "id": "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/GET/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudOnboardingFunction0E26C704",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "OnboardingApi9093F73F"
                                      },
                                      "/",
                                      {
                                        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
                                      },
                                      "/GET/trucks"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks": {
                            "id": "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/GET/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudOnboardingFunction0E26C704",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "OnboardingApi9093F73F"
                                      },
                                      "/test-invoke-stage/GET/trucks"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "OnboardingAuthorizer49D92508"
                                },
                                "httpMethod": "GET",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "CrudOnboardingFunction0E26C704",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "OnboardingApitrucksDE410494"
                                },
                                "restApiId": {
                                  "Ref": "OnboardingApi9093F73F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      },
                      "POST": {
                        "id": "POST",
                        "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/POST",
                        "children": {
                          "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..trucks": {
                            "id": "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..trucks",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/POST/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..trucks",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudOnboardingFunction0E26C704",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "OnboardingApi9093F73F"
                                      },
                                      "/",
                                      {
                                        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
                                      },
                                      "/POST/trucks"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..trucks": {
                            "id": "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..trucks",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/POST/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..trucks",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "CrudOnboardingFunction0E26C704",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "OnboardingApi9093F73F"
                                      },
                                      "/test-invoke-stage/POST/trucks"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/POST/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "OnboardingAuthorizer49D92508"
                                },
                                "httpMethod": "POST",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "CrudOnboardingFunction0E26C704",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "OnboardingApitrucksDE410494"
                                },
                                "restApiId": {
                                  "Ref": "OnboardingApi9093F73F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      },
                      "{id}": {
                        "id": "{id}",
                        "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "OnboardingApitrucksDE410494"
                                },
                                "pathPart": "{id}",
                                "restApiId": {
                                  "Ref": "OnboardingApi9093F73F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.133.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/GET",
                            "children": {
                              "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks.{id}": {
                                "id": "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks.{id}",
                                "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/GET/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudOnboardingFunction0E26C704",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "OnboardingApi9093F73F"
                                          },
                                          "/",
                                          {
                                            "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
                                          },
                                          "/GET/trucks/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks.{id}": {
                                "id": "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks.{id}",
                                "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/GET/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudOnboardingFunction0E26C704",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "OnboardingApi9093F73F"
                                          },
                                          "/test-invoke-stage/GET/trucks/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "authorizationType": "COGNITO_USER_POOLS",
                                    "authorizerId": {
                                      "Ref": "OnboardingAuthorizer49D92508"
                                    },
                                    "httpMethod": "GET",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "CrudOnboardingFunction0E26C704",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    },
                                    "resourceId": {
                                      "Ref": "OnboardingApitrucksidF8F9AC6C"
                                    },
                                    "restApiId": {
                                      "Ref": "OnboardingApi9093F73F"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.133.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.133.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/DELETE",
                            "children": {
                              "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.DELETE..trucks.{id}": {
                                "id": "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.DELETE..trucks.{id}",
                                "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/DELETE/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.DELETE..trucks.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudOnboardingFunction0E26C704",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "OnboardingApi9093F73F"
                                          },
                                          "/",
                                          {
                                            "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
                                          },
                                          "/DELETE/trucks/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.DELETE..trucks.{id}": {
                                "id": "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.DELETE..trucks.{id}",
                                "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/DELETE/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.DELETE..trucks.{id}",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "CrudOnboardingFunction0E26C704",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "OnboardingApi9093F73F"
                                          },
                                          "/test-invoke-stage/DELETE/trucks/*"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.133.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "authorizationType": "COGNITO_USER_POOLS",
                                    "authorizerId": {
                                      "Ref": "OnboardingAuthorizer49D92508"
                                    },
                                    "httpMethod": "DELETE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "CrudOnboardingFunction0E26C704",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    },
                                    "resourceId": {
                                      "Ref": "OnboardingApitrucksidF8F9AC6C"
                                    },
                                    "restApiId": {
                                      "Ref": "OnboardingApi9093F73F"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.133.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "rules": {
                    "id": "rules",
                    "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "OnboardingApi9093F73F",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "rules",
                            "restApiId": {
                              "Ref": "OnboardingApi9093F73F"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.133.0"
                        }
                      },
                      "POST": {
                        "id": "POST",
                        "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules/POST",
                        "children": {
                          "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..rules": {
                            "id": "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..rules",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules/POST/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..rules",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "RulesValidationFunctionC60293C1",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "OnboardingApi9093F73F"
                                      },
                                      "/",
                                      {
                                        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
                                      },
                                      "/POST/rules"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..rules": {
                            "id": "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..rules",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules/POST/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..rules",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "RulesValidationFunctionC60293C1",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "OnboardingApi9093F73F"
                                      },
                                      "/test-invoke-stage/POST/rules"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules/POST/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "OnboardingAuthorizer49D92508"
                                },
                                "httpMethod": "POST",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "RulesValidationFunctionC60293C1",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "OnboardingApirulesCD498DE6"
                                },
                                "restApiId": {
                                  "Ref": "OnboardingApi9093F73F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "finance": {
                    "id": "finance",
                    "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "OnboardingApi9093F73F",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "finance",
                            "restApiId": {
                              "Ref": "OnboardingApi9093F73F"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.133.0"
                        }
                      },
                      "POST": {
                        "id": "POST",
                        "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance/POST",
                        "children": {
                          "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..finance": {
                            "id": "ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..finance",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance/POST/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..finance",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "FinanceValidationFunction64448614",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "OnboardingApi9093F73F"
                                      },
                                      "/",
                                      {
                                        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
                                      },
                                      "/POST/finance"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..finance": {
                            "id": "ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..finance",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance/POST/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..finance",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "FinanceValidationFunction64448614",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":",
                                      {
                                        "Ref": "OnboardingApi9093F73F"
                                      },
                                      "/test-invoke-stage/POST/finance"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.133.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance/POST/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "authorizationType": "COGNITO_USER_POOLS",
                                "authorizerId": {
                                  "Ref": "OnboardingAuthorizer49D92508"
                                },
                                "httpMethod": "POST",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "FinanceValidationFunction64448614",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                },
                                "resourceId": {
                                  "Ref": "OnboardingApifinance69E8A70A"
                                },
                                "restApiId": {
                                  "Ref": "OnboardingApi9093F73F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.133.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.133.0"
            }
          },
          "RulesValidationFunction": {
            "id": "RulesValidationFunction",
            "path": "CcsExerciseOnboardingStack/RulesValidationFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseOnboardingStack/RulesValidationFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseOnboardingStack/RulesValidationFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseOnboardingStack/RulesValidationFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/RulesValidationFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "RulesValidationFunctionServiceRole741DC39C",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "FinanceValidationFunction": {
            "id": "FinanceValidationFunction",
            "path": "CcsExerciseOnboardingStack/FinanceValidationFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseOnboardingStack/FinanceValidationFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseOnboardingStack/FinanceValidationFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseOnboardingStack/FinanceValidationFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/FinanceValidationFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "FinanceValidationFunctionServiceRoleC6623D51",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "IdentityValidationRule": {
            "id": "IdentityValidationRule",
            "path": "CcsExerciseOnboardingStack/IdentityValidationRule",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/IdentityValidationRule/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "eventPattern": {
                      "source": [
                        "identityVerification"
                      ]
                    },
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "IdentityValidationFunction0791017F",
                            "Arn"
                          ]
                        },
                        "deadLetterConfig": {
                          "arn": {
                            "Fn::GetAtt": [
                              "IdentityValidationRuleDLQ3A079A90",
                              "Arn"
                            ]
                          }
                        },
                        "retryPolicy": {
                          "maximumRetryAttempts": 2,
                          "maximumEventAgeInSeconds": 7200
                        }
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.133.0"
                }
              },
              "AllowEventRuleCcsExerciseOnboardingStackIdentityValidationFunctionAA0B5C52": {
                "id": "AllowEventRuleCcsExerciseOnboardingStackIdentityValidationFunctionAA0B5C52",
                "path": "CcsExerciseOnboardingStack/IdentityValidationRule/AllowEventRuleCcsExerciseOnboardingStackIdentityValidationFunctionAA0B5C52",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "IdentityValidationFunction0791017F",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "IdentityValidationRuleCAC4E95F",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.133.0"
            }
          },
          "IdentityValidationRuleDLQ": {
            "id": "IdentityValidationRuleDLQ",
            "path": "CcsExerciseOnboardingStack/IdentityValidationRuleDLQ",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/IdentityValidationRuleDLQ/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.CfnQueue",
                  "version": "2.133.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CcsExerciseOnboardingStack/IdentityValidationRuleDLQ/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseOnboardingStack/IdentityValidationRuleDLQ/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::SQS::QueuePolicy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "sqs:SendMessage",
                              "Condition": {
                                "ArnEquals": {
                                  "aws:SourceArn": {
                                    "Fn::GetAtt": [
                                      "IdentityValidationRuleCAC4E95F",
                                      "Arn"
                                    ]
                                  }
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "events.amazonaws.com"
                              },
                              "Resource": {
                                "Fn::GetAtt": [
                                  "IdentityValidationRuleDLQ3A079A90",
                                  "Arn"
                                ]
                              },
                              "Sid": "AllowEventRuleCcsExerciseOnboardingStackIdentityValidationRule5F964E15"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "queues": [
                          {
                            "Ref": "IdentityValidationRuleDLQ3A079A90"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_sqs.CfnQueuePolicy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.QueuePolicy",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.Queue",
              "version": "2.133.0"
            }
          },
          "IdentityValidationFunction": {
            "id": "IdentityValidationFunction",
            "path": "CcsExerciseOnboardingStack/IdentityValidationFunction",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "CcsExerciseOnboardingStack/IdentityValidationFunction/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "CcsExerciseOnboardingStack/IdentityValidationFunction/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseOnboardingStack/IdentityValidationFunction/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/IdentityValidationFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "architectures": [
                      "arm64"
                    ],
                    "code": {
                      "zipFile": "exports.handler = handler.toString()"
                    },
                    "handler": "index.handler",
                    "memorySize": 512,
                    "role": {
                      "Fn::GetAtt": [
                        "IdentityValidationFunctionServiceRole55B74BD7",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs18.x",
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "timeout": 300
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.Function",
              "version": "2.133.0"
            }
          },
          "onboardingwebapplication-bucket": {
            "id": "onboardingwebapplication-bucket",
            "path": "CcsExerciseOnboardingStack/onboardingwebapplication-bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/onboardingwebapplication-bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "corsConfiguration": {
                      "corsRules": [
                        {
                          "allowedHeaders": [
                            "*"
                          ],
                          "allowedMethods": [
                            "GET",
                            "POST",
                            "DELETE"
                          ],
                          "allowedOrigins": [
                            "*"
                          ],
                          "exposedHeaders": [
                            "Access-Control-Allow-Origin"
                          ]
                        }
                      ]
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      },
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.133.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CcsExerciseOnboardingStack/onboardingwebapplication-bucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseOnboardingStack/onboardingwebapplication-bucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "onboardingwebapplicationbucket149297C0"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "onboardingwebapplicationbucket149297C0",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "onboardingwebapplicationbucket149297C0",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:PutBucketPolicy",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "onboardingwebapplicationbucket149297C0",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "onboardingwebapplicationbucket149297C0",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "OnboardingWebApplicationoaiDE719FC5",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "onboardingwebapplicationbucket149297C0",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "onboardingwebapplicationbucket149297C0",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "OnboardingWebApplicationoaiDE719FC5",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "onboardingwebapplicationbucket149297C0",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.133.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "CcsExerciseOnboardingStack/onboardingwebapplication-bucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "CcsExerciseOnboardingStack/onboardingwebapplication-bucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.133.0"
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "CcsExerciseOnboardingStack/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "CcsExerciseOnboardingStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.133.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "CcsExerciseOnboardingStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "CcsExerciseOnboardingStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.133.0"
            }
          },
          "OnboardingWebApplication-oai": {
            "id": "OnboardingWebApplication-oai",
            "path": "CcsExerciseOnboardingStack/OnboardingWebApplication-oai",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/OnboardingWebApplication-oai/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                  "aws:cdk:cloudformation:props": {
                    "cloudFrontOriginAccessIdentityConfig": {
                      "comment": "Allows CloudFront to reach the bucket"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.OriginAccessIdentity",
              "version": "2.133.0"
            }
          },
          "OnboardingWebApplication": {
            "id": "OnboardingWebApplication",
            "path": "CcsExerciseOnboardingStack/OnboardingWebApplication",
            "children": {
              "Origin1": {
                "id": "Origin1",
                "path": "CcsExerciseOnboardingStack/OnboardingWebApplication/Origin1",
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.3.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseOnboardingStack/OnboardingWebApplication/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "origins": [
                        {
                          "domainName": {
                            "Fn::GetAtt": [
                              "onboardingwebapplicationbucket149297C0",
                              "RegionalDomainName"
                            ]
                          },
                          "id": "CcsExerciseOnboardingStackOnboardingWebApplicationOrigin18F993D48",
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "OnboardingWebApplicationoaiDE719FC5"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "pathPattern": "*",
                        "targetOriginId": "CcsExerciseOnboardingStackOnboardingWebApplicationOrigin18F993D48",
                        "allowedMethods": [
                          "GET",
                          "HEAD",
                          "OPTIONS",
                          "PUT",
                          "PATCH",
                          "POST",
                          "DELETE"
                        ],
                        "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                        "compress": true,
                        "originRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
                        "responseHeadersPolicyId": "67f7725c-6f97-4210-82d7-5512b31e9d03",
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "defaultRootObject": "index.html",
                      "httpVersion": "http2",
                      "ipv6Enabled": true
                    },
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
              "version": "2.133.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "CcsExerciseOnboardingStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "CcsExerciseOnboardingStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "CcsExerciseOnboardingStack/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnCondition",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "CcsExerciseOnboardingStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.133.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "CcsExerciseOnboardingStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.133.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.133.0"
        }
      },
      "CcsExerciseCollectorStack": {
        "id": "CcsExerciseCollectorStack",
        "path": "CcsExerciseCollectorStack",
        "children": {
          "IoTCollectorStream": {
            "id": "IoTCollectorStream",
            "path": "CcsExerciseCollectorStack/IoTCollectorStream",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCollectorStack/IoTCollectorStream/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Kinesis::Stream",
                  "aws:cdk:cloudformation:props": {
                    "name": "IoTCollectorStream",
                    "retentionPeriodHours": 24,
                    "streamEncryption": {
                      "Fn::If": [
                        "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
                        {
                          "Ref": "AWS::NoValue"
                        },
                        {
                          "EncryptionType": "KMS",
                          "KeyId": "alias/aws/kinesis"
                        }
                      ]
                    },
                    "streamModeDetails": {
                      "streamMode": "ON_DEMAND"
                    },
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_kinesis.CfnStream",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_kinesis.Stream",
              "version": "2.133.0"
            }
          },
          "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
            "id": "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            "path": "CcsExerciseCollectorStack/AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnCondition",
              "version": "2.133.0"
            }
          },
          "iotcollector-bucket": {
            "id": "iotcollector-bucket",
            "path": "CcsExerciseCollectorStack/iotcollector-bucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCollectorStack/iotcollector-bucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      },
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.133.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "CcsExerciseCollectorStack/iotcollector-bucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCollectorStack/iotcollector-bucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "iotcollectorbucketFA2C37C1"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "iotcollectorbucketFA2C37C1",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "iotcollectorbucketFA2C37C1",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:PutBucketPolicy",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "iotcollectorbucketFA2C37C1",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "iotcollectorbucketFA2C37C1",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.133.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "CcsExerciseCollectorStack/iotcollector-bucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "CcsExerciseCollectorStack/iotcollector-bucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.133.0"
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "CcsExerciseCollectorStack/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "CcsExerciseCollectorStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.133.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "CcsExerciseCollectorStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "CcsExerciseCollectorStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProviderBase",
              "version": "2.133.0"
            }
          },
          "IoTCollectorDeliveryStream": {
            "id": "IoTCollectorDeliveryStream",
            "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream",
            "children": {
              "Service Role": {
                "id": "Service Role",
                "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/Service Role",
                "children": {
                  "ImportService Role": {
                    "id": "ImportService Role",
                    "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/Service Role/ImportService Role",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/Service Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "firehose.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/Service Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/Service Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "kinesis:DescribeStreamSummary",
                                    "kinesis:GetRecords",
                                    "kinesis:GetShardIterator",
                                    "kinesis:ListShards",
                                    "kinesis:SubscribeToShard",
                                    "kinesis:DescribeStream",
                                    "kinesis:ListStreams",
                                    "kinesis:DescribeStreamConsumer"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "IoTCollectorStream016F0836",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "IoTCollectorDeliveryStreamServiceRoleDefaultPolicy968B0088",
                            "roles": [
                              {
                                "Ref": "IoTCollectorDeliveryStreamServiceRole1693FD15"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "S3 Destination Role": {
                "id": "S3 Destination Role",
                "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/S3 Destination Role",
                "children": {
                  "ImportS3 Destination Role": {
                    "id": "ImportS3 Destination Role",
                    "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/S3 Destination Role/ImportS3 Destination Role",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/S3 Destination Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "firehose.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/S3 Destination Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/S3 Destination Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject",
                                    "s3:PutObjectLegalHold",
                                    "s3:PutObjectRetention",
                                    "s3:PutObjectTagging",
                                    "s3:PutObjectVersionTagging",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "iotcollectorbucketFA2C37C1",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "iotcollectorbucketFA2C37C1",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "IoTCollectorDeliveryStreamLogGroup4D36A9F5",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "IoTCollectorDeliveryStreamS3DestinationRoleDefaultPolicyE1231DAB",
                            "roles": [
                              {
                                "Ref": "IoTCollectorDeliveryStreamS3DestinationRoleD4F60690"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/LogGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/LogGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                      "aws:cdk:cloudformation:props": {
                        "retentionInDays": 731,
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                      "version": "2.133.0"
                    }
                  },
                  "S3Destination": {
                    "id": "S3Destination",
                    "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/LogGroup/S3Destination",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/LogGroup/S3Destination/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Logs::LogStream",
                          "aws:cdk:cloudformation:props": {
                            "logGroupName": {
                              "Ref": "IoTCollectorDeliveryStreamLogGroup4D36A9F5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_logs.CfnLogStream",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.LogStream",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                  "version": "2.133.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCollectorStack/IoTCollectorDeliveryStream/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::KinesisFirehose::DeliveryStream",
                  "aws:cdk:cloudformation:props": {
                    "deliveryStreamName": "IoTCollectorDeliveryStream",
                    "deliveryStreamType": "KinesisStreamAsSource",
                    "extendedS3DestinationConfiguration": {
                      "cloudWatchLoggingOptions": {
                        "enabled": true,
                        "logGroupName": {
                          "Ref": "IoTCollectorDeliveryStreamLogGroup4D36A9F5"
                        },
                        "logStreamName": {
                          "Ref": "IoTCollectorDeliveryStreamLogGroupS3Destination8B3FA023"
                        }
                      },
                      "roleArn": {
                        "Fn::GetAtt": [
                          "IoTCollectorDeliveryStreamS3DestinationRoleD4F60690",
                          "Arn"
                        ]
                      },
                      "bucketArn": {
                        "Fn::GetAtt": [
                          "iotcollectorbucketFA2C37C1",
                          "Arn"
                        ]
                      }
                    },
                    "kinesisStreamSourceConfiguration": {
                      "kinesisStreamArn": {
                        "Fn::GetAtt": [
                          "IoTCollectorStream016F0836",
                          "Arn"
                        ]
                      },
                      "roleArn": {
                        "Fn::GetAtt": [
                          "IoTCollectorDeliveryStreamServiceRole1693FD15",
                          "Arn"
                        ]
                      }
                    },
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_kinesisfirehose.CfnDeliveryStream",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-kinesisfirehose-alpha.DeliveryStream",
              "version": "2.133.0-alpha.0"
            }
          },
          "@aws-cdk--aws-kinesisfirehose.CidrBlocks": {
            "id": "@aws-cdk--aws-kinesisfirehose.CidrBlocks",
            "path": "CcsExerciseCollectorStack/@aws-cdk--aws-kinesisfirehose.CidrBlocks",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnMapping",
              "version": "2.133.0"
            }
          },
          "IotKinesisRule": {
            "id": "IotKinesisRule",
            "path": "CcsExerciseCollectorStack/IotKinesisRule",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "CcsExerciseCollectorStack/IotKinesisRule/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IoT::TopicRule",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "env",
                        "value": "DEV"
                      },
                      {
                        "key": "project",
                        "value": "ccs-001"
                      }
                    ],
                    "topicRulePayload": {
                      "actions": [
                        {
                          "kinesis": {
                            "streamName": {
                              "Ref": "IoTCollectorStream016F0836"
                            },
                            "partitionKey": "9020da4c-cb63-45f5-ae24-893385cce180",
                            "roleArn": {
                              "Fn::GetAtt": [
                                "IotKinesisRuleTopicRuleActionRole3F299C71",
                                "Arn"
                              ]
                            }
                          }
                        },
                        {
                          "firehose": {
                            "batchMode": true,
                            "deliveryStreamName": {
                              "Ref": "IoTCollectorDeliveryStream05219BDE"
                            },
                            "roleArn": {
                              "Fn::GetAtt": [
                                "IotKinesisRuleTopicRuleActionRole3F299C71",
                                "Arn"
                              ]
                            },
                            "separator": "\n"
                          }
                        }
                      ],
                      "awsIotSqlVersion": "2016-03-23",
                      "sql": "SELECT * FROM 'device/data'"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iot.CfnTopicRule",
                  "version": "2.133.0"
                }
              },
              "TopicRuleActionRole": {
                "id": "TopicRuleActionRole",
                "path": "CcsExerciseCollectorStack/IotKinesisRule/TopicRuleActionRole",
                "children": {
                  "ImportTopicRuleActionRole": {
                    "id": "ImportTopicRuleActionRole",
                    "path": "CcsExerciseCollectorStack/IotKinesisRule/TopicRuleActionRole/ImportTopicRuleActionRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.133.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "CcsExerciseCollectorStack/IotKinesisRule/TopicRuleActionRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "iot.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "tags": [
                          {
                            "key": "env",
                            "value": "DEV"
                          },
                          {
                            "key": "project",
                            "value": "ccs-001"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.133.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "CcsExerciseCollectorStack/IotKinesisRule/TopicRuleActionRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "CcsExerciseCollectorStack/IotKinesisRule/TopicRuleActionRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "kinesis:PutRecord",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "IoTCollectorStream016F0836",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "firehose:PutRecord",
                                    "firehose:PutRecordBatch"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "IoTCollectorDeliveryStream05219BDE",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "IotKinesisRuleTopicRuleActionRoleDefaultPolicy5C170C0E",
                            "roles": [
                              {
                                "Ref": "IotKinesisRuleTopicRuleActionRole3F299C71"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.133.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.133.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iot-alpha.TopicRule",
              "version": "2.133.0-alpha.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "CcsExerciseCollectorStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "CcsExerciseCollectorStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.133.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "CcsExerciseCollectorStack/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnCondition",
                  "version": "2.133.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "CcsExerciseCollectorStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.133.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "CcsExerciseCollectorStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.133.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.133.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.3.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.133.0"
    }
  }
}