{
 "Resources": {
  "CrudCoreFunctionServiceRole5F4CBE83": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CrudCoreFunction/ServiceRole/Resource"
   }
  },
  "CrudCoreFunctionE832C5FC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CrudCoreFunctionServiceRole5F4CBE83",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "CrudCoreFunctionServiceRole5F4CBE83"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CrudCoreFunction/Resource"
   }
  },
  "CrudCoreUserPoolFD818991": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "MfaConfiguration": "OFF",
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     },
     {
      "Mutable": true,
      "Name": "name",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "CrudCoreUserPool",
    "UserPoolTags": {
     "env": "DEV",
     "project": "ccs-001"
    },
    "UsernameConfiguration": {
     "CaseSensitive": false
    },
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CrudCoreUserPool/Resource"
   }
  },
  "CrudCoreClient4153BAE7": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "RefreshTokenValidity": 60,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "TokenValidityUnits": {
     "RefreshToken": "minutes"
    },
    "UserPoolId": {
     "Ref": "CrudCoreUserPoolFD818991"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CrudCoreClient/Resource"
   }
  },
  "CrudCoreAuthorizerB0694699": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "IdentitySource": "method.request.header.Authorization",
    "Name": "CcsExerciseCoreStackCrudCoreAuthorizer321EBACE",
    "ProviderARNs": [
     {
      "Fn::GetAtt": [
       "CrudCoreUserPoolFD818991",
       "Arn"
      ]
     }
    ],
    "RestApiId": {
     "Ref": "CoreApiB0451A24"
    },
    "Type": "COGNITO_USER_POOLS"
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CrudCoreAuthorizer/Resource"
   }
  },
  "CoreApiB0451A24": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "CoreApi",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Resource"
   }
  },
  "CoreApiCloudWatchRole3D3E3A2F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/CloudWatchRole/Resource"
   }
  },
  "CoreApiAccount344CB8B7": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "CoreApiCloudWatchRole3D3E3A2F",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "CoreApiB0451A24"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Account"
   }
  },
  "CoreApiDeployment4F36329Ba102ce871a5896350037f122d3007b80": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "CoreApiB0451A24"
    }
   },
   "DependsOn": [
    "CoreApicustomersidDELETEA8E4CC28",
    "CoreApicustomersidGETF69DE045",
    "CoreApicustomersid73F92449",
    "CoreApicustomersGETF16E45E9",
    "CoreApicustomersPOST2A62A963",
    "CoreApicustomers4F0FD650"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Deployment/Resource"
   }
  },
  "CoreApiDeploymentStageprod008E845B": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "CoreApiDeployment4F36329Ba102ce871a5896350037f122d3007b80"
    },
    "RestApiId": {
     "Ref": "CoreApiB0451A24"
    },
    "StageName": "prod",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "DependsOn": [
    "CoreApiAccount344CB8B7"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/DeploymentStage.prod/Resource"
   }
  },
  "CoreApicustomers4F0FD650": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "CoreApiB0451A24",
      "RootResourceId"
     ]
    },
    "PathPart": "customers",
    "RestApiId": {
     "Ref": "CoreApiB0451A24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/Resource"
   }
  },
  "CoreApicustomersGETApiPermissionCcsExerciseCoreStackCoreApiB819FE30GETcustomers89354852": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudCoreFunctionE832C5FC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoreApiB0451A24"
       },
       "/",
       {
        "Ref": "CoreApiDeploymentStageprod008E845B"
       },
       "/GET/customers"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/GET/ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.GET..customers"
   }
  },
  "CoreApicustomersGETApiPermissionTestCcsExerciseCoreStackCoreApiB819FE30GETcustomers7033FBCA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudCoreFunctionE832C5FC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoreApiB0451A24"
       },
       "/test-invoke-stage/GET/customers"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/GET/ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.GET..customers"
   }
  },
  "CoreApicustomersGETF16E45E9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CrudCoreAuthorizerB0694699"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudCoreFunctionE832C5FC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoreApicustomers4F0FD650"
    },
    "RestApiId": {
     "Ref": "CoreApiB0451A24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/GET/Resource"
   }
  },
  "CoreApicustomersPOSTApiPermissionCcsExerciseCoreStackCoreApiB819FE30POSTcustomersAB1B1670": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudCoreFunctionE832C5FC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoreApiB0451A24"
       },
       "/",
       {
        "Ref": "CoreApiDeploymentStageprod008E845B"
       },
       "/POST/customers"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/POST/ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.POST..customers"
   }
  },
  "CoreApicustomersPOSTApiPermissionTestCcsExerciseCoreStackCoreApiB819FE30POSTcustomersC57AFB52": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudCoreFunctionE832C5FC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoreApiB0451A24"
       },
       "/test-invoke-stage/POST/customers"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/POST/ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.POST..customers"
   }
  },
  "CoreApicustomersPOST2A62A963": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CrudCoreAuthorizerB0694699"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudCoreFunctionE832C5FC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoreApicustomers4F0FD650"
    },
    "RestApiId": {
     "Ref": "CoreApiB0451A24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/POST/Resource"
   }
  },
  "CoreApicustomersid73F92449": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "CoreApicustomers4F0FD650"
    },
    "PathPart": "{id}",
    "RestApiId": {
     "Ref": "CoreApiB0451A24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/Resource"
   }
  },
  "CoreApicustomersidGETApiPermissionCcsExerciseCoreStackCoreApiB819FE30GETcustomersid04AC9B58": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudCoreFunctionE832C5FC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoreApiB0451A24"
       },
       "/",
       {
        "Ref": "CoreApiDeploymentStageprod008E845B"
       },
       "/GET/customers/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/GET/ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.GET..customers.{id}"
   }
  },
  "CoreApicustomersidGETApiPermissionTestCcsExerciseCoreStackCoreApiB819FE30GETcustomersid04CB1027": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudCoreFunctionE832C5FC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoreApiB0451A24"
       },
       "/test-invoke-stage/GET/customers/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/GET/ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.GET..customers.{id}"
   }
  },
  "CoreApicustomersidGETF69DE045": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CrudCoreAuthorizerB0694699"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudCoreFunctionE832C5FC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoreApicustomersid73F92449"
    },
    "RestApiId": {
     "Ref": "CoreApiB0451A24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/GET/Resource"
   }
  },
  "CoreApicustomersidDELETEApiPermissionCcsExerciseCoreStackCoreApiB819FE30DELETEcustomersidCA1023CC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudCoreFunctionE832C5FC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoreApiB0451A24"
       },
       "/",
       {
        "Ref": "CoreApiDeploymentStageprod008E845B"
       },
       "/DELETE/customers/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/DELETE/ApiPermission.CcsExerciseCoreStackCoreApiB819FE30.DELETE..customers.{id}"
   }
  },
  "CoreApicustomersidDELETEApiPermissionTestCcsExerciseCoreStackCoreApiB819FE30DELETEcustomersid1E2F1884": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudCoreFunctionE832C5FC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "CoreApiB0451A24"
       },
       "/test-invoke-stage/DELETE/customers/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/DELETE/ApiPermission.Test.CcsExerciseCoreStackCoreApiB819FE30.DELETE..customers.{id}"
   }
  },
  "CoreApicustomersidDELETEA8E4CC28": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "CrudCoreAuthorizerB0694699"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudCoreFunctionE832C5FC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "CoreApicustomersid73F92449"
    },
    "RestApiId": {
     "Ref": "CoreApiB0451A24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreApi/Default/customers/{id}/DELETE/Resource"
   }
  },
  "CoreSecretD41E526A": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"clusteradmin\"}"
    },
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreSecret/Resource"
   }
  },
  "CoreSecretAttachment4827D262": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "CoreSecretD41E526A"
    },
    "TargetId": {
     "Ref": "CoreDbCluster0D70995F"
    },
    "TargetType": "AWS::RDS::DBCluster"
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreSecret/Attachment/Resource"
   }
  },
  "CoreDbCluster0D70995F": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "CopyTagsToSnapshot": true,
    "DBClusterIdentifier": "core-db-cl",
    "DBClusterParameterGroupName": "default.aurora-mysql5.7",
    "DatabaseName": "coredb",
    "Engine": "aurora-mysql",
    "EngineMode": "serverless",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "CoreSecretD41E526A"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "CoreSecretD41E526A"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "ScalingConfiguration": {
     "AutoPause": true,
     "MaxCapacity": 2,
     "MinCapacity": 1,
     "SecondsUntilAutoPause": 600
    },
    "StorageEncrypted": true,
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "VpcSecurityGroupIds": []
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreDbCluster/Resource"
   }
  },
  "CustomerAdminRule5278F362": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail-type": [
      "create-customer",
      "update-customer",
      "delete-customer"
     ],
     "source": [
      "crm.customerAdmin"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "CustomerAdminFunction4EA27316",
        "Arn"
       ]
      },
      "DeadLetterConfig": {
       "Arn": {
        "Fn::GetAtt": [
         "CustomerAdminRuleDLQE3636912",
         "Arn"
        ]
       }
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumEventAgeInSeconds": 7200,
       "MaximumRetryAttempts": 2
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CustomerAdminRule/Resource"
   }
  },
  "CustomerAdminRuleAllowEventRuleCcsExerciseCoreStackCustomerAdminFunctionBAE94895EFA9C08A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CustomerAdminFunction4EA27316",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "CustomerAdminRule5278F362",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CustomerAdminRule/AllowEventRuleCcsExerciseCoreStackCustomerAdminFunctionBAE94895"
   }
  },
  "CustomerAdminRuleDLQE3636912": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CustomerAdminRuleDLQ/Resource"
   }
  },
  "CustomerAdminRuleDLQPolicyA1BF6CDB": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "CustomerAdminRule5278F362",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "CustomerAdminRuleDLQE3636912",
         "Arn"
        ]
       },
       "Sid": "AllowEventRuleCcsExerciseCoreStackCustomerAdminRuleD2BB79B3"
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "CustomerAdminRuleDLQE3636912"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CustomerAdminRuleDLQ/Policy/Resource"
   }
  },
  "CustomerAdminFunctionServiceRoleAF7B535F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CustomerAdminFunction/ServiceRole/Resource"
   }
  },
  "CustomerAdminFunction4EA27316": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CustomerAdminFunctionServiceRoleAF7B535F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "CustomerAdminFunctionServiceRoleAF7B535F"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CustomerAdminFunction/Resource"
   }
  },
  "EventNotificationRule1BC291BB": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail-type": [
      "unscheduled-stop",
      "customer-accident",
      "speed-limit-exceeded",
      "emergency"
     ],
     "source": [
      "collector.alerts"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "EventNotificationFunctionD9D8E104",
        "Arn"
       ]
      },
      "DeadLetterConfig": {
       "Arn": {
        "Fn::GetAtt": [
         "EventNotificationRuleDLQ18CE9698",
         "Arn"
        ]
       }
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumEventAgeInSeconds": 7200,
       "MaximumRetryAttempts": 2
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/EventNotificationRule/Resource"
   }
  },
  "EventNotificationRuleAllowEventRuleCcsExerciseCoreStackEventNotificationFunction82F5E212D0F8F855": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EventNotificationFunctionD9D8E104",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "EventNotificationRule1BC291BB",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/EventNotificationRule/AllowEventRuleCcsExerciseCoreStackEventNotificationFunction82F5E212"
   }
  },
  "EventNotificationRuleDLQ18CE9698": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/EventNotificationRuleDLQ/Resource"
   }
  },
  "EventNotificationRuleDLQPolicy690B73B9": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "EventNotificationRule1BC291BB",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "EventNotificationRuleDLQ18CE9698",
         "Arn"
        ]
       },
       "Sid": "AllowEventRuleCcsExerciseCoreStackEventNotificationRule641EE2BD"
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "EventNotificationRuleDLQ18CE9698"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/EventNotificationRuleDLQ/Policy/Resource"
   }
  },
  "EventNotificationFunctionServiceRoleDED56C33": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/EventNotificationFunction/ServiceRole/Resource"
   }
  },
  "EventNotificationFunctionD9D8E104": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "EventNotificationFunctionServiceRoleDED56C33",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "EventNotificationFunctionServiceRoleDED56C33"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/EventNotificationFunction/Resource"
   }
  },
  "corewebapplicationbucketE10EFDEF": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "ExposedHeaders": [
        "Access-Control-Allow-Origin"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/corewebapplication-bucket/Resource"
   }
  },
  "corewebapplicationbucketPolicyCF0EF917": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "corewebapplicationbucketE10EFDEF"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "corewebapplicationbucketE10EFDEF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "corewebapplicationbucketE10EFDEF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "corewebapplicationbucketE10EFDEF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "corewebapplicationbucketE10EFDEF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "CoreWebApplicationoai1A04BB63",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "corewebapplicationbucketE10EFDEF",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "corewebapplicationbucketE10EFDEF",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "CoreWebApplicationoai1A04BB63",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "corewebapplicationbucketE10EFDEF",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/corewebapplication-bucket/Policy/Resource"
   }
  },
  "corewebapplicationbucketAutoDeleteObjectsCustomResourceFB8C2ECA": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "corewebapplicationbucketE10EFDEF"
    }
   },
   "DependsOn": [
    "corewebapplicationbucketPolicyCF0EF917"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/corewebapplication-bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6c1e9b465fa4b2d651dbc9ce3e732d8702a7b19137327684a71d89f1d355f1a2.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "corewebapplicationbucketE10EFDEF"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.6c1e9b465fa4b2d651dbc9ce3e732d8702a7b19137327684a71d89f1d355f1a2",
    "aws:asset:property": "Code"
   }
  },
  "CoreWebApplicationoai1A04BB63": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreWebApplication-oai/Resource"
   }
  },
  "CoreWebApplication73466DD2": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS",
       "PUT",
       "PATCH",
       "POST",
       "DELETE"
      ],
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
      "ResponseHeadersPolicyId": "67f7725c-6f97-4210-82d7-5512b31e9d03",
      "TargetOriginId": "CcsExerciseCoreStackCoreWebApplicationOrigin1BFE732CE",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "corewebapplicationbucketE10EFDEF",
         "RegionalDomainName"
        ]
       },
       "Id": "CcsExerciseCoreStackCoreWebApplicationOrigin1BFE732CE",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "CoreWebApplicationoai1A04BB63"
           }
          ]
         ]
        }
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CoreWebApplication/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21S224bIRD9lrxjmsZfsF4rUiNVcdbtc4XZyXpqFhxmsOUi/r0CvPFG8gtzzlyYIw5P8vtyKR8f1JkWuj8sDO5k3LLSB6HO9CcaNe56JeNzsJrRWdG+2znegB+RCJ1NAtUoY+cM5EKOSWg3WGQn428Cv3HO5NInnkBrECzPSzWThDrioBjO6iJjW++aWqgJvHce/4HPkzPWAXFzxKLiBhutXbAs1nA07jJeF87YltVQpFfQAbngNawU3cj1zop/Au9dn1MVJeF7knGtWO0UwRa0BxZb8CfwBohaE4ir2vXqSpKg0kajsmoAL2MWME3m8Ev5AbhhVno/qb5fSQJOYJlk7MLVhJBNoA+S8S1AKLkKyrlxBvXlM1lpErSUcRX0AcquK6rhNjHnSWjjQv/unWUZXz0OmJ8biH70YBm5TLS55zn33O1YI7HHXZh+1pyn9MWB18DHwKINxG68a83X0sa7E/bgi5UNEXC2GO1QZDnbY1kiXtRJfXt6fPhLiAsfLOMIsqvxP4HnU3opAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseCoreStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "CoreApiEndpointEECFCA1D": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "CoreApiB0451A24"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "CoreApiDeploymentStageprod008E845B"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}