{
 "Resources": {
  "CrudTrucksAdminFunctionServiceRoleA653866B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/CrudTrucksAdminFunction/ServiceRole/Resource"
   }
  },
  "CrudTrucksAdminFunctionServiceRoleDefaultPolicyA0A944D3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TrucksAdminTable259F787D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CrudTrucksAdminFunctionServiceRoleDefaultPolicyA0A944D3",
    "Roles": [
     {
      "Ref": "CrudTrucksAdminFunctionServiceRoleA653866B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/CrudTrucksAdminFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CrudTrucksAdminFunctionAFC52BF3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CrudTrucksAdminFunctionServiceRoleA653866B",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "CrudTrucksAdminFunctionServiceRoleDefaultPolicyA0A944D3",
    "CrudTrucksAdminFunctionServiceRoleA653866B"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/CrudTrucksAdminFunction/Resource"
   }
  },
  "TrucksAdminTable259F787D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "TableName": "TrucksAdminTable",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminTable/Resource"
   }
  },
  "TrucksAdminUserPool854FB8D7": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "MfaConfiguration": "OFF",
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     },
     {
      "Mutable": true,
      "Name": "name",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "TrucksAdminUserPool",
    "UserPoolTags": {
     "env": "DEV",
     "project": "ccs-001"
    },
    "UsernameConfiguration": {
     "CaseSensitive": false
    },
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminUserPool/Resource"
   }
  },
  "TrucksAdminClientEABCDDE5": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "RefreshTokenValidity": 60,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "TokenValidityUnits": {
     "RefreshToken": "minutes"
    },
    "UserPoolId": {
     "Ref": "TrucksAdminUserPool854FB8D7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminClient/Resource"
   }
  },
  "TrucksAdminAuthorizer3AD5D526": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "IdentitySource": "method.request.header.Authorization",
    "Name": "CcsExerciseAdminStackTrucksAdminAuthorizerEE43BD23",
    "ProviderARNs": [
     {
      "Fn::GetAtt": [
       "TrucksAdminUserPool854FB8D7",
       "Arn"
      ]
     }
    ],
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    },
    "Type": "COGNITO_USER_POOLS"
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminAuthorizer/Resource"
   }
  },
  "TrucksAdminApiDA497A60": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "TrucksAdminApi",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Resource"
   }
  },
  "TrucksAdminApiCloudWatchRoleCC6B974D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/CloudWatchRole/Resource"
   }
  },
  "TrucksAdminApiAccount3FB60003": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "TrucksAdminApiCloudWatchRoleCC6B974D",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TrucksAdminApiDA497A60"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Account"
   }
  },
  "TrucksAdminApiDeploymentC9A53E6942405b1bad278581466fb3edc5c4e5f2": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "DependsOn": [
    "TrucksAdminApialertsGET4C073474",
    "TrucksAdminApialertsPOSTEAE85DED",
    "TrucksAdminApialertsEC469F48",
    "TrucksAdminApibillsGET420DE0BD",
    "TrucksAdminApibills74A2CBBB",
    "TrucksAdminApidashboardsGETEF13DBFA",
    "TrucksAdminApidashboards9C723744",
    "TrucksAdminApitrucksidDELETE34009F78",
    "TrucksAdminApitrucksidGET33A11672",
    "TrucksAdminApitrucksid14B1CFD3",
    "TrucksAdminApitrucksGETC21F663A",
    "TrucksAdminApitrucksPOSTB7BB76F3",
    "TrucksAdminApitrucksE6689FCD"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Deployment/Resource"
   }
  },
  "TrucksAdminApiDeploymentStageprod2FBD9108": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "TrucksAdminApiDeploymentC9A53E6942405b1bad278581466fb3edc5c4e5f2"
    },
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    },
    "StageName": "prod",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "DependsOn": [
    "TrucksAdminApiAccount3FB60003"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/DeploymentStage.prod/Resource"
   }
  },
  "TrucksAdminApitrucksE6689FCD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "TrucksAdminApiDA497A60",
      "RootResourceId"
     ]
    },
    "PathPart": "trucks",
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/Resource"
   }
  },
  "TrucksAdminApitrucksGETApiPermissionCcsExerciseAdminStackTrucksAdminApi0FDC8872GETtrucks959DD502": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudTrucksAdminFunctionAFC52BF3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/",
       {
        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
       },
       "/GET/trucks"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks"
   }
  },
  "TrucksAdminApitrucksGETApiPermissionTestCcsExerciseAdminStackTrucksAdminApi0FDC8872GETtrucksCD17BF1A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudTrucksAdminFunctionAFC52BF3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/test-invoke-stage/GET/trucks"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks"
   }
  },
  "TrucksAdminApitrucksGETC21F663A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "TrucksAdminAuthorizer3AD5D526"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudTrucksAdminFunctionAFC52BF3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TrucksAdminApitrucksE6689FCD"
    },
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/GET/Resource"
   }
  },
  "TrucksAdminApitrucksPOSTApiPermissionCcsExerciseAdminStackTrucksAdminApi0FDC8872POSTtrucks8CD8FD95": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudTrucksAdminFunctionAFC52BF3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/",
       {
        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
       },
       "/POST/trucks"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/POST/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..trucks"
   }
  },
  "TrucksAdminApitrucksPOSTApiPermissionTestCcsExerciseAdminStackTrucksAdminApi0FDC8872POSTtrucks7357397F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudTrucksAdminFunctionAFC52BF3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/test-invoke-stage/POST/trucks"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/POST/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..trucks"
   }
  },
  "TrucksAdminApitrucksPOSTB7BB76F3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "TrucksAdminAuthorizer3AD5D526"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudTrucksAdminFunctionAFC52BF3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TrucksAdminApitrucksE6689FCD"
    },
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/POST/Resource"
   }
  },
  "TrucksAdminApitrucksid14B1CFD3": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "TrucksAdminApitrucksE6689FCD"
    },
    "PathPart": "{id}",
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/Resource"
   }
  },
  "TrucksAdminApitrucksidGETApiPermissionCcsExerciseAdminStackTrucksAdminApi0FDC8872GETtrucksid937D1F14": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudTrucksAdminFunctionAFC52BF3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/",
       {
        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
       },
       "/GET/trucks/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks.{id}"
   }
  },
  "TrucksAdminApitrucksidGETApiPermissionTestCcsExerciseAdminStackTrucksAdminApi0FDC8872GETtrucksidC3A2C45B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudTrucksAdminFunctionAFC52BF3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/test-invoke-stage/GET/trucks/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..trucks.{id}"
   }
  },
  "TrucksAdminApitrucksidGET33A11672": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "TrucksAdminAuthorizer3AD5D526"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudTrucksAdminFunctionAFC52BF3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TrucksAdminApitrucksid14B1CFD3"
    },
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/GET/Resource"
   }
  },
  "TrucksAdminApitrucksidDELETEApiPermissionCcsExerciseAdminStackTrucksAdminApi0FDC8872DELETEtrucksid70FF0BA7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudTrucksAdminFunctionAFC52BF3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/",
       {
        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
       },
       "/DELETE/trucks/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/DELETE/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.DELETE..trucks.{id}"
   }
  },
  "TrucksAdminApitrucksidDELETEApiPermissionTestCcsExerciseAdminStackTrucksAdminApi0FDC8872DELETEtrucksid0258FAD0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudTrucksAdminFunctionAFC52BF3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/test-invoke-stage/DELETE/trucks/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/DELETE/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.DELETE..trucks.{id}"
   }
  },
  "TrucksAdminApitrucksidDELETE34009F78": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "TrucksAdminAuthorizer3AD5D526"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudTrucksAdminFunctionAFC52BF3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TrucksAdminApitrucksid14B1CFD3"
    },
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/trucks/{id}/DELETE/Resource"
   }
  },
  "TrucksAdminApidashboards9C723744": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "TrucksAdminApiDA497A60",
      "RootResourceId"
     ]
    },
    "PathPart": "dashboards",
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards/Resource"
   }
  },
  "TrucksAdminApidashboardsGETApiPermissionCcsExerciseAdminStackTrucksAdminApi0FDC8872GETdashboards68ACA1E5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TrucksDashboardsFunction960D52B0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/",
       {
        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
       },
       "/GET/dashboards"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..dashboards"
   }
  },
  "TrucksAdminApidashboardsGETApiPermissionTestCcsExerciseAdminStackTrucksAdminApi0FDC8872GETdashboardsB5F276DF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TrucksDashboardsFunction960D52B0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/test-invoke-stage/GET/dashboards"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..dashboards"
   }
  },
  "TrucksAdminApidashboardsGETEF13DBFA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "TrucksAdminAuthorizer3AD5D526"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TrucksDashboardsFunction960D52B0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TrucksAdminApidashboards9C723744"
    },
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/dashboards/GET/Resource"
   }
  },
  "TrucksAdminApibills74A2CBBB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "TrucksAdminApiDA497A60",
      "RootResourceId"
     ]
    },
    "PathPart": "bills",
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills/Resource"
   }
  },
  "TrucksAdminApibillsGETApiPermissionCcsExerciseAdminStackTrucksAdminApi0FDC8872GETbills2004B2B5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TrucksBillsFunction619A3F0F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/",
       {
        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
       },
       "/GET/bills"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..bills"
   }
  },
  "TrucksAdminApibillsGETApiPermissionTestCcsExerciseAdminStackTrucksAdminApi0FDC8872GETbills7D1E7982": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TrucksBillsFunction619A3F0F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/test-invoke-stage/GET/bills"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..bills"
   }
  },
  "TrucksAdminApibillsGET420DE0BD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "TrucksAdminAuthorizer3AD5D526"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TrucksBillsFunction619A3F0F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TrucksAdminApibills74A2CBBB"
    },
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/bills/GET/Resource"
   }
  },
  "TrucksAdminApialertsEC469F48": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "TrucksAdminApiDA497A60",
      "RootResourceId"
     ]
    },
    "PathPart": "alerts",
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/Resource"
   }
  },
  "TrucksAdminApialertsPOSTApiPermissionCcsExerciseAdminStackTrucksAdminApi0FDC8872POSTalerts6F5E3256": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TrucksAlertsFunction3614F7F5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/",
       {
        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
       },
       "/POST/alerts"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/POST/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..alerts"
   }
  },
  "TrucksAdminApialertsPOSTApiPermissionTestCcsExerciseAdminStackTrucksAdminApi0FDC8872POSTalerts5FBEB117": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TrucksAlertsFunction3614F7F5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/test-invoke-stage/POST/alerts"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/POST/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.POST..alerts"
   }
  },
  "TrucksAdminApialertsPOSTEAE85DED": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "TrucksAdminAuthorizer3AD5D526"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TrucksAlertsFunction3614F7F5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TrucksAdminApialertsEC469F48"
    },
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/POST/Resource"
   }
  },
  "TrucksAdminApialertsGETApiPermissionCcsExerciseAdminStackTrucksAdminApi0FDC8872GETalerts87EE396F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TrucksAlertsFunction3614F7F5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/",
       {
        "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
       },
       "/GET/alerts"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/GET/ApiPermission.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..alerts"
   }
  },
  "TrucksAdminApialertsGETApiPermissionTestCcsExerciseAdminStackTrucksAdminApi0FDC8872GETalerts6E925C82": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TrucksAlertsFunction3614F7F5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "TrucksAdminApiDA497A60"
       },
       "/test-invoke-stage/GET/alerts"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/GET/ApiPermission.Test.CcsExerciseAdminStackTrucksAdminApi0FDC8872.GET..alerts"
   }
  },
  "TrucksAdminApialertsGET4C073474": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "TrucksAdminAuthorizer3AD5D526"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TrucksAlertsFunction3614F7F5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "TrucksAdminApialertsEC469F48"
    },
    "RestApiId": {
     "Ref": "TrucksAdminApiDA497A60"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminApi/Default/alerts/GET/Resource"
   }
  },
  "TrucksDashboardsFunctionServiceRole0F1B6746": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksDashboardsFunction/ServiceRole/Resource"
   }
  },
  "TrucksDashboardsFunction960D52B0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "TrucksDashboardsFunctionServiceRole0F1B6746",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "TrucksDashboardsFunctionServiceRole0F1B6746"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksDashboardsFunction/Resource"
   }
  },
  "TrucksBillsFunctionServiceRoleF2953187": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksBillsFunction/ServiceRole/Resource"
   }
  },
  "TrucksBillsFunction619A3F0F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "TrucksBillsFunctionServiceRoleF2953187",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "TrucksBillsFunctionServiceRoleF2953187"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksBillsFunction/Resource"
   }
  },
  "TrucksAlertsFunctionServiceRole2FD44525": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAlertsFunction/ServiceRole/Resource"
   }
  },
  "TrucksAlertsFunction3614F7F5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "TrucksAlertsFunctionServiceRole2FD44525",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "TrucksAlertsFunctionServiceRole2FD44525"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAlertsFunction/Resource"
   }
  },
  "TruckAdminRuleED002F20": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "detail-type": [
      "create-customer",
      "update-customer",
      "delete-customer"
     ],
     "source": [
      "crm.customerAdmin"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "TruckAdminFunction7A8DCF90",
        "Arn"
       ]
      },
      "DeadLetterConfig": {
       "Arn": {
        "Fn::GetAtt": [
         "TruckAdminRuleDLQ53F665E9",
         "Arn"
        ]
       }
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumEventAgeInSeconds": 7200,
       "MaximumRetryAttempts": 2
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TruckAdminRule/Resource"
   }
  },
  "TruckAdminRuleAllowEventRuleCcsExerciseAdminStackTruckAdminFunction2C94FF0549716E3E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TruckAdminFunction7A8DCF90",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "TruckAdminRuleED002F20",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TruckAdminRule/AllowEventRuleCcsExerciseAdminStackTruckAdminFunction2C94FF05"
   }
  },
  "TruckAdminRuleDLQ53F665E9": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TruckAdminRuleDLQ/Resource"
   }
  },
  "TruckAdminRuleDLQPolicyE300081D": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "TruckAdminRuleED002F20",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "TruckAdminRuleDLQ53F665E9",
         "Arn"
        ]
       },
       "Sid": "AllowEventRuleCcsExerciseAdminStackTruckAdminRule80C8DE92"
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "TruckAdminRuleDLQ53F665E9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TruckAdminRuleDLQ/Policy/Resource"
   }
  },
  "TruckAdminFunctionServiceRole9E79FD18": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TruckAdminFunction/ServiceRole/Resource"
   }
  },
  "TruckAdminFunction7A8DCF90": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "TruckAdminFunctionServiceRole9E79FD18",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "TruckAdminFunctionServiceRole9E79FD18"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TruckAdminFunction/Resource"
   }
  },
  "trucksadminwebapplicationbucket561BD5AA": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "ExposedHeaders": [
        "Access-Control-Allow-Origin"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/trucksadminwebapplication-bucket/Resource"
   }
  },
  "trucksadminwebapplicationbucketPolicy67B859AF": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "trucksadminwebapplicationbucket561BD5AA"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "trucksadminwebapplicationbucket561BD5AA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "trucksadminwebapplicationbucket561BD5AA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "trucksadminwebapplicationbucket561BD5AA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "trucksadminwebapplicationbucket561BD5AA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "TrucksAdminWebApplicationoai401630EA",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "trucksadminwebapplicationbucket561BD5AA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "trucksadminwebapplicationbucket561BD5AA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "TrucksAdminWebApplicationoai401630EA",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "trucksadminwebapplicationbucket561BD5AA",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/trucksadminwebapplication-bucket/Policy/Resource"
   }
  },
  "trucksadminwebapplicationbucketAutoDeleteObjectsCustomResourceB956C55E": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "trucksadminwebapplicationbucket561BD5AA"
    }
   },
   "DependsOn": [
    "trucksadminwebapplicationbucketPolicy67B859AF"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/trucksadminwebapplication-bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6c1e9b465fa4b2d651dbc9ce3e732d8702a7b19137327684a71d89f1d355f1a2.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "trucksadminwebapplicationbucket561BD5AA"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.6c1e9b465fa4b2d651dbc9ce3e732d8702a7b19137327684a71d89f1d355f1a2",
    "aws:asset:property": "Code"
   }
  },
  "TrucksAdminWebApplicationoai401630EA": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminWebApplication-oai/Resource"
   }
  },
  "TrucksAdminWebApplication164BCB9C": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS",
       "PUT",
       "PATCH",
       "POST",
       "DELETE"
      ],
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
      "ResponseHeadersPolicyId": "67f7725c-6f97-4210-82d7-5512b31e9d03",
      "TargetOriginId": "CcsExerciseAdminStackTrucksAdminWebApplicationOrigin17B711868",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "trucksadminwebapplicationbucket561BD5AA",
         "RegionalDomainName"
        ]
       },
       "Id": "CcsExerciseAdminStackTrucksAdminWebApplicationOrigin17B711868",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "TrucksAdminWebApplicationoai401630EA"
           }
          ]
         ]
        }
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/TrucksAdminWebApplication/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22S3W7bMAyFn6X3itY1T5C6KLABQzO3ux5kiXW52GIqUgkyQe8+SEoWF+iN+R3+SNSB7/TX9Vrf3pgjr6zbrSYcdHoWY3fKHPl3msw8OKPTY/RWkLzqXv2StxBmZEbyWaGZdeppglKocUsT2lPtq5SVO3kzkxt0ejFD66yQlaXRo5BOvxjClmgqtf98gW5C8LIstUxWZo+jETiak05dO+vSwpsobxTwL4QyuVA9sGz2WBe+4sZail7UA+wnOs3nCxfqWcxYd2/QA1MMFu4NX8X5zMY/QN7IlVSjrOAAXlinPp79isUEfmedfkaINdegfq9OLmRWvNbpPtod1A3P1MJ1YqmzshNF9xrIi05PAUcszwXmbw68oNSJrvQ8lp5POx6QJeAQLz/BUuf8wYGnKPsoqossNH9qzcfSNtABHYRq5YYZpFiMfqxrkXdYL1HfzcF8ubu9+cOIqxC94Ay6b/EfQ6pbc9QCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseAdminStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "TrucksAdminApiEndpointDBB7D880": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "TrucksAdminApiDA497A60"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "TrucksAdminApiDeploymentStageprod2FBD9108"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}