{
 "Resources": {
  "CrudOnboardingFunctionServiceRole319A592F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/CrudOnboardingFunction/ServiceRole/Resource"
   }
  },
  "CrudOnboardingFunctionServiceRoleDefaultPolicyB3562B3B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OnboardingTable9FE21C19",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CrudOnboardingFunctionServiceRoleDefaultPolicyB3562B3B",
    "Roles": [
     {
      "Ref": "CrudOnboardingFunctionServiceRole319A592F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/CrudOnboardingFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CrudOnboardingFunction0E26C704": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CrudOnboardingFunctionServiceRole319A592F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "CrudOnboardingFunctionServiceRoleDefaultPolicyB3562B3B",
    "CrudOnboardingFunctionServiceRole319A592F"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/CrudOnboardingFunction/Resource"
   }
  },
  "OnboardingTable9FE21C19": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "TableName": "OnboardingTable",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingTable/Resource"
   }
  },
  "OnboardingUserPool3945B2E6": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "MfaConfiguration": "OFF",
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     },
     {
      "Mutable": true,
      "Name": "name",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "OnboardingUserPool",
    "UserPoolTags": {
     "env": "DEV",
     "project": "ccs-001"
    },
    "UsernameConfiguration": {
     "CaseSensitive": false
    },
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingUserPool/Resource"
   }
  },
  "OnboardingClient4BF937D8": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "RefreshTokenValidity": 60,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "TokenValidityUnits": {
     "RefreshToken": "minutes"
    },
    "UserPoolId": {
     "Ref": "OnboardingUserPool3945B2E6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingClient/Resource"
   }
  },
  "OnboardingAuthorizer49D92508": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "IdentitySource": "method.request.header.Authorization",
    "Name": "CcsExerciseOnboardingStackOnboardingAuthorizerE8C0DFAC",
    "ProviderARNs": [
     {
      "Fn::GetAtt": [
       "OnboardingUserPool3945B2E6",
       "Arn"
      ]
     }
    ],
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    },
    "Type": "COGNITO_USER_POOLS"
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingAuthorizer/Resource"
   }
  },
  "OnboardingApi9093F73F": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "OnboardingApi",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Resource"
   }
  },
  "OnboardingApiCloudWatchRoleE7541C5D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/CloudWatchRole/Resource"
   }
  },
  "OnboardingApiAccountBDBBF500": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "OnboardingApiCloudWatchRoleE7541C5D",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "OnboardingApi9093F73F"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Account"
   }
  },
  "OnboardingApiDeploymentA619C539395592db8e879f699dbb4a70f2823418": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "DependsOn": [
    "OnboardingApifinancePOST915D5D83",
    "OnboardingApifinance69E8A70A",
    "OnboardingApirulesPOSTCCAE4DCB",
    "OnboardingApirulesCD498DE6",
    "OnboardingApitrucksidDELETE9EAAA61A",
    "OnboardingApitrucksidGET059E2210",
    "OnboardingApitrucksidF8F9AC6C",
    "OnboardingApitrucksGET93D3551A",
    "OnboardingApitrucksPOST9CB76A94",
    "OnboardingApitrucksDE410494"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Deployment/Resource"
   }
  },
  "OnboardingApiDeploymentStageprod0CBF7864": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "OnboardingApiDeploymentA619C539395592db8e879f699dbb4a70f2823418"
    },
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    },
    "StageName": "prod",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "DependsOn": [
    "OnboardingApiAccountBDBBF500"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/DeploymentStage.prod/Resource"
   }
  },
  "OnboardingApitrucksDE410494": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "OnboardingApi9093F73F",
      "RootResourceId"
     ]
    },
    "PathPart": "trucks",
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/Resource"
   }
  },
  "OnboardingApitrucksGETApiPermissionCcsExerciseOnboardingStackOnboardingApi6D59A927GETtrucks0FD42F07": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudOnboardingFunction0E26C704",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/",
       {
        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
       },
       "/GET/trucks"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/GET/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks"
   }
  },
  "OnboardingApitrucksGETApiPermissionTestCcsExerciseOnboardingStackOnboardingApi6D59A927GETtrucks4AD7CF30": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudOnboardingFunction0E26C704",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/test-invoke-stage/GET/trucks"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/GET/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks"
   }
  },
  "OnboardingApitrucksGET93D3551A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "OnboardingAuthorizer49D92508"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudOnboardingFunction0E26C704",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "OnboardingApitrucksDE410494"
    },
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/GET/Resource"
   }
  },
  "OnboardingApitrucksPOSTApiPermissionCcsExerciseOnboardingStackOnboardingApi6D59A927POSTtrucks12D3F9CF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudOnboardingFunction0E26C704",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/",
       {
        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
       },
       "/POST/trucks"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/POST/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..trucks"
   }
  },
  "OnboardingApitrucksPOSTApiPermissionTestCcsExerciseOnboardingStackOnboardingApi6D59A927POSTtrucks59699C6F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudOnboardingFunction0E26C704",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/test-invoke-stage/POST/trucks"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/POST/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..trucks"
   }
  },
  "OnboardingApitrucksPOST9CB76A94": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "OnboardingAuthorizer49D92508"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudOnboardingFunction0E26C704",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "OnboardingApitrucksDE410494"
    },
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/POST/Resource"
   }
  },
  "OnboardingApitrucksidF8F9AC6C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "OnboardingApitrucksDE410494"
    },
    "PathPart": "{id}",
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/Resource"
   }
  },
  "OnboardingApitrucksidGETApiPermissionCcsExerciseOnboardingStackOnboardingApi6D59A927GETtrucksid4F38FD09": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudOnboardingFunction0E26C704",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/",
       {
        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
       },
       "/GET/trucks/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/GET/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks.{id}"
   }
  },
  "OnboardingApitrucksidGETApiPermissionTestCcsExerciseOnboardingStackOnboardingApi6D59A927GETtrucksid0528C004": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudOnboardingFunction0E26C704",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/test-invoke-stage/GET/trucks/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/GET/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.GET..trucks.{id}"
   }
  },
  "OnboardingApitrucksidGET059E2210": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "OnboardingAuthorizer49D92508"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudOnboardingFunction0E26C704",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "OnboardingApitrucksidF8F9AC6C"
    },
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/GET/Resource"
   }
  },
  "OnboardingApitrucksidDELETEApiPermissionCcsExerciseOnboardingStackOnboardingApi6D59A927DELETEtrucksidBE49A9AA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudOnboardingFunction0E26C704",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/",
       {
        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
       },
       "/DELETE/trucks/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/DELETE/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.DELETE..trucks.{id}"
   }
  },
  "OnboardingApitrucksidDELETEApiPermissionTestCcsExerciseOnboardingStackOnboardingApi6D59A927DELETEtrucksidC6F698A0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CrudOnboardingFunction0E26C704",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/test-invoke-stage/DELETE/trucks/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/DELETE/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.DELETE..trucks.{id}"
   }
  },
  "OnboardingApitrucksidDELETE9EAAA61A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "OnboardingAuthorizer49D92508"
    },
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CrudOnboardingFunction0E26C704",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "OnboardingApitrucksidF8F9AC6C"
    },
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/trucks/{id}/DELETE/Resource"
   }
  },
  "OnboardingApirulesCD498DE6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "OnboardingApi9093F73F",
      "RootResourceId"
     ]
    },
    "PathPart": "rules",
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules/Resource"
   }
  },
  "OnboardingApirulesPOSTApiPermissionCcsExerciseOnboardingStackOnboardingApi6D59A927POSTrulesDF04B004": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RulesValidationFunctionC60293C1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/",
       {
        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
       },
       "/POST/rules"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules/POST/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..rules"
   }
  },
  "OnboardingApirulesPOSTApiPermissionTestCcsExerciseOnboardingStackOnboardingApi6D59A927POSTrules3ACEFFC2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RulesValidationFunctionC60293C1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/test-invoke-stage/POST/rules"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules/POST/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..rules"
   }
  },
  "OnboardingApirulesPOSTCCAE4DCB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "OnboardingAuthorizer49D92508"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "RulesValidationFunctionC60293C1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "OnboardingApirulesCD498DE6"
    },
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/rules/POST/Resource"
   }
  },
  "OnboardingApifinance69E8A70A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "OnboardingApi9093F73F",
      "RootResourceId"
     ]
    },
    "PathPart": "finance",
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance/Resource"
   }
  },
  "OnboardingApifinancePOSTApiPermissionCcsExerciseOnboardingStackOnboardingApi6D59A927POSTfinance0784E7B1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "FinanceValidationFunction64448614",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/",
       {
        "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
       },
       "/POST/finance"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance/POST/ApiPermission.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..finance"
   }
  },
  "OnboardingApifinancePOSTApiPermissionTestCcsExerciseOnboardingStackOnboardingApi6D59A927POSTfinance401CF6BE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "FinanceValidationFunction64448614",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "OnboardingApi9093F73F"
       },
       "/test-invoke-stage/POST/finance"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance/POST/ApiPermission.Test.CcsExerciseOnboardingStackOnboardingApi6D59A927.POST..finance"
   }
  },
  "OnboardingApifinancePOST915D5D83": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "OnboardingAuthorizer49D92508"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "FinanceValidationFunction64448614",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "OnboardingApifinance69E8A70A"
    },
    "RestApiId": {
     "Ref": "OnboardingApi9093F73F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingApi/Default/finance/POST/Resource"
   }
  },
  "RulesValidationFunctionServiceRole741DC39C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/RulesValidationFunction/ServiceRole/Resource"
   }
  },
  "RulesValidationFunctionC60293C1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "RulesValidationFunctionServiceRole741DC39C",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "RulesValidationFunctionServiceRole741DC39C"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/RulesValidationFunction/Resource"
   }
  },
  "FinanceValidationFunctionServiceRoleC6623D51": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/FinanceValidationFunction/ServiceRole/Resource"
   }
  },
  "FinanceValidationFunction64448614": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "FinanceValidationFunctionServiceRoleC6623D51",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "FinanceValidationFunctionServiceRoleC6623D51"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/FinanceValidationFunction/Resource"
   }
  },
  "IdentityValidationRuleCAC4E95F": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "identityVerification"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "IdentityValidationFunction0791017F",
        "Arn"
       ]
      },
      "DeadLetterConfig": {
       "Arn": {
        "Fn::GetAtt": [
         "IdentityValidationRuleDLQ3A079A90",
         "Arn"
        ]
       }
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumEventAgeInSeconds": 7200,
       "MaximumRetryAttempts": 2
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/IdentityValidationRule/Resource"
   }
  },
  "IdentityValidationRuleAllowEventRuleCcsExerciseOnboardingStackIdentityValidationFunctionAA0B5C523D06AFED": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "IdentityValidationFunction0791017F",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "IdentityValidationRuleCAC4E95F",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/IdentityValidationRule/AllowEventRuleCcsExerciseOnboardingStackIdentityValidationFunctionAA0B5C52"
   }
  },
  "IdentityValidationRuleDLQ3A079A90": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/IdentityValidationRuleDLQ/Resource"
   }
  },
  "IdentityValidationRuleDLQPolicy8AECF1DC": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "IdentityValidationRuleCAC4E95F",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "IdentityValidationRuleDLQ3A079A90",
         "Arn"
        ]
       },
       "Sid": "AllowEventRuleCcsExerciseOnboardingStackIdentityValidationRule5F964E15"
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "IdentityValidationRuleDLQ3A079A90"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/IdentityValidationRuleDLQ/Policy/Resource"
   }
  },
  "IdentityValidationFunctionServiceRole55B74BD7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/IdentityValidationFunction/ServiceRole/Resource"
   }
  },
  "IdentityValidationFunction0791017F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ZipFile": "exports.handler = handler.toString()"
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "IdentityValidationFunctionServiceRole55B74BD7",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "Timeout": 300
   },
   "DependsOn": [
    "IdentityValidationFunctionServiceRole55B74BD7"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/IdentityValidationFunction/Resource"
   }
  },
  "onboardingwebapplicationbucket149297C0": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "DELETE"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "ExposedHeaders": [
        "Access-Control-Allow-Origin"
       ]
      }
     ]
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/onboardingwebapplication-bucket/Resource"
   }
  },
  "onboardingwebapplicationbucketPolicy15A780B6": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "onboardingwebapplicationbucket149297C0"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "onboardingwebapplicationbucket149297C0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "onboardingwebapplicationbucket149297C0",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "onboardingwebapplicationbucket149297C0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "onboardingwebapplicationbucket149297C0",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OnboardingWebApplicationoaiDE719FC5",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "onboardingwebapplicationbucket149297C0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "onboardingwebapplicationbucket149297C0",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "OnboardingWebApplicationoaiDE719FC5",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "onboardingwebapplicationbucket149297C0",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/onboardingwebapplication-bucket/Policy/Resource"
   }
  },
  "onboardingwebapplicationbucketAutoDeleteObjectsCustomResource2CBA1784": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "onboardingwebapplicationbucket149297C0"
    }
   },
   "DependsOn": [
    "onboardingwebapplicationbucketPolicy15A780B6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/onboardingwebapplication-bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6c1e9b465fa4b2d651dbc9ce3e732d8702a7b19137327684a71d89f1d355f1a2.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "onboardingwebapplicationbucket149297C0"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.6c1e9b465fa4b2d651dbc9ce3e732d8702a7b19137327684a71d89f1d355f1a2",
    "aws:asset:property": "Code"
   }
  },
  "OnboardingWebApplicationoaiDE719FC5": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingWebApplication-oai/Resource"
   }
  },
  "OnboardingWebApplication25182733": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS",
       "PUT",
       "PATCH",
       "POST",
       "DELETE"
      ],
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
      "ResponseHeadersPolicyId": "67f7725c-6f97-4210-82d7-5512b31e9d03",
      "TargetOriginId": "CcsExerciseOnboardingStackOnboardingWebApplicationOrigin18F993D48",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "onboardingwebapplicationbucket149297C0",
         "RegionalDomainName"
        ]
       },
       "Id": "CcsExerciseOnboardingStackOnboardingWebApplicationOrigin18F993D48",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "OnboardingWebApplicationoaiDE719FC5"
           }
          ]
         ]
        }
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "env",
      "Value": "DEV"
     },
     {
      "Key": "project",
      "Value": "ccs-001"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/OnboardingWebApplication/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22S3W7bMAyFn6X3itY1T5C6KLABQzO3ux5kiXW52GIqUgkyQe8+SEoWF+iN+R3+SNSB7/TX9Vrf3pgjr6zbrSYcdHoWY3fKHPl3msw8OKPTY/RWkLzqXv2StxBmZEbyWaGZdeppglKocUsT2lPtq5SVO3kzkxt0ejFD66yQlaXRo5BOvxjClmgqtf98gW5C8LIstUxWZo+jETiak05dO+vSwpsobxTwL4QyuVA9sGz2WBe+4sZail7UA+wnOs3nCxfqWcxYd2/QA1MMFu4NX8X5zMY/QN7IlVSjrOAAXlinPp79isUEfmedfkaINdegfq9OLmRWvNbpPtod1A3P1MJ1YqmzshNF9xrIi05PAUcszwXmbw68oNSJrvQ8lp5POx6QJeAQLz/BUuf8wYGnKPsoqossNH9qzcfSNtABHYRq5YYZpFiMfqxrkXdYL1HfzcF8ubu9+cOIqxC94Ay6b/EfQ6pbc9QCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CcsExerciseOnboardingStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "OnboardingApiEndpointFDF673B9": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "OnboardingApi9093F73F"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "OnboardingApiDeploymentStageprod0CBF7864"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}